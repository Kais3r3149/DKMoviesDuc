@model DKMovies.Models.Concession
@{
    ViewData["Title"] = "Xóa sản phẩm - " + Model.Name;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="mb-4">
    <div class="d-flex align-items-center justify-content-between">
        <div>
            <h2 class="mb-1 fw-bold text-danger">
                <i class="fas fa-trash-alt text-danger me-2"></i>Xóa sản phẩm
            </h2>
            <p class="text-muted mb-0">Xác nhận xóa sản phẩm khỏi hệ thống</p>
        </div>
        <a asp-action="Index" class="btn btn-outline-secondary btn-sm">
            <i class="fas fa-arrow-left me-1"></i>Quay lại danh sách
        </a>
    </div>
</div>

<!-- Warning Alert -->
<div class="alert alert-danger border-0 shadow-sm mb-4" role="alert">
    <div class="d-flex align-items-center">
        <i class="fas fa-exclamation-triangle fa-2x me-3"></i>
        <div>
            <h5 class="alert-heading mb-1">Cảnh báo!</h5>
            <p class="mb-0">Bạn có chắc chắn muốn xóa sản phẩm này? Hành động này không thể hoàn tác.</p>
        </div>
    </div>
</div>

<div class="row g-4">
    <!-- Product Card -->
    <div class="col-lg-4">
        <div class="card border-danger shadow-sm">
            <div class="card-header bg-danger text-white py-3">
                <h5 class="card-title mb-0 fw-semibold">
                    <i class="fas fa-box me-2"></i>Thông tin sản phẩm
                </h5>
            </div>
            <div class="position-relative">
                <img src="@(!string.IsNullOrEmpty(Model.ImagePath) ? Model.ImagePath : "/images/default-concession.jpg")"
                     alt="@Model.Name"
                     class="card-img"
                     style="height: 250px; object-fit: cover; filter: grayscale(50%);"
                     onerror="this.src='/images/default-concession.jpg'" />

                <!-- Danger Overlay -->
                <div class="position-absolute top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center"
                     style="background: rgba(220, 53, 69, 0.8);">
                    <div class="text-center text-white">
                        <i class="fas fa-trash-alt fa-3x mb-2"></i>
                        <div class="fw-bold">SẼ BỊ XÓA</div>
                    </div>
                </div>

                <!-- Category Badge -->
                <div class="position-absolute top-0 end-0 m-3">
                    <span class="badge @GetCategoryBadgeClass(Model.Category)">
                        <i class="@GetCategoryIcon(Model.Category) me-1"></i>
                        @GetCategoryDisplayName(Model.Category)
                    </span>
                </div>
            </div>

            <div class="card-body text-center p-4">
                <h4 class="card-title fw-bold mb-2 text-danger">@Model.Name</h4>

                <div class="d-flex justify-content-center gap-2 mb-3">
                    <span class="badge @(Model.IsActive ? "bg-success" : "bg-danger")">
                        <i class="fas @(Model.IsActive ? "fa-check" : "fa-times") me-1"></i>
                        @(Model.IsActive ? "Hoạt động" : "Ngưng hoạt động")
                    </span>
                </div>

                <!-- Product Stats -->
                <div class="row g-2 text-center">
                    <div class="col-4">
                        <div class="bg-light rounded p-2">
                            <h6 class="text-info mb-0">@Model.TheaterConcessions.Count()</h6>
                            <small class="text-muted">Rạp áp dụng</small>
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="bg-light rounded p-2">
                            <h6 class="text-warning mb-0">
                                @if (Model.TheaterConcessions.Any())
                                {
                                    @Model.TheaterConcessions.Average(tc => tc.Price).ToString("N0")
                                }
                                else
                                {
                                    <text>0</text>
                                }
                            </h6>
                            <small class="text-muted">Giá TB (k₫)</small>
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="bg-light rounded p-2">
                            <h6 class="text-success mb-0">@Model.TheaterConcessions.Sum(tc => tc.StockLeft)</h6>
                            <small class="text-muted">Tồn kho</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Product Details -->
    <div class="col-lg-8">
        <div class="card border-0 shadow-sm">
            <div class="card-header bg-white border-bottom py-3">
                <h5 class="card-title mb-0 fw-semibold">
                    <i class="fas fa-info-circle text-info me-2"></i>Chi tiết sản phẩm sẽ bị xóa
                </h5>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-6">
                        <label class="form-label fw-medium text-muted">ID Sản phẩm:</label>
                        <div class="fw-bold">#@Model.ID</div>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-medium text-muted">Tên sản phẩm:</label>
                        <div class="fw-bold">@Model.Name</div>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-medium text-muted">Danh mục:</label>
                        <div class="fw-bold">@GetCategoryDisplayName(Model.Category)</div>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-medium text-muted">Trạng thái:</label>
                        <div class="fw-bold">@(Model.IsActive ? "Hoạt động" : "Ngưng hoạt động")</div>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-medium text-muted">Số rạp áp dụng:</label>
                        <div class="fw-bold">@Model.TheaterConcessions.Count() rạp</div>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-medium text-muted">Tổng tồn kho:</label>
                        <div class="fw-bold">@Model.TheaterConcessions.Sum(tc => tc.StockLeft) sản phẩm</div>
                    </div>
                    @if (!string.IsNullOrEmpty(Model.Description))
                    {
                        <div class="col-12">
                            <label class="form-label fw-medium text-muted">Mô tả:</label>
                            <div class="fw-bold">@Model.Description</div>
                        </div>
                    }
                    @if (!string.IsNullOrEmpty(Model.ImagePath))
                    {
                        <div class="col-12">
                            <label class="form-label fw-medium text-muted">Đường dẫn hình ảnh:</label>
                            <div class="fw-bold text-info">@Model.ImagePath</div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Impact Analysis -->
        <div class="card border-warning shadow-sm mt-4">
            <div class="card-header bg-warning text-dark py-3">
                <h5 class="card-title mb-0 fw-semibold">
                    <i class="fas fa-exclamation-triangle me-2"></i>Tác động khi xóa
                </h5>
            </div>
            <div class="card-body">
                @if (Model.TheaterConcessions.Any())
                {
                    <div class="alert alert-warning" role="alert">
                        <h6 class="alert-heading">
                            <i class="fas fa-exclamation-triangle me-2"></i>Cảnh báo: Có dữ liệu liên quan!
                        </h6>
                        <p class="mb-0">Sản phẩm này có dữ liệu liên quan trong hệ thống:</p>
                        <ul class="mt-2 mb-0">
                            <li><strong>@Model.TheaterConcessions.Count() rạp đang áp dụng</strong> - Cài đặt giá và tồn kho</li>
                            <li><strong>@Model.TheaterConcessions.Sum(tc => tc.StockLeft) sản phẩm tồn kho</strong> - Giá trị hàng hóa</li>
                        </ul>
                    </div>
                }
                else
                {
                    <div class="alert alert-success" role="alert">
                        <h6 class="alert-heading">
                            <i class="fas fa-check-circle me-2"></i>Có thể xóa an toàn
                        </h6>
                        <p class="mb-0">Sản phẩm này chưa có dữ liệu liên quan nào trong hệ thống. Việc xóa sẽ không ảnh hưởng đến dữ liệu khác.</p>
                    </div>
                }

                <div class="alert alert-info" role="alert">
                    <h6 class="alert-heading">
                        <i class="fas fa-info-circle me-2"></i>Thông tin sẽ bị xóa vĩnh viễn
                    </h6>
                    <ul class="mb-0">
                        <li><strong>Thông tin sản phẩm</strong> - Tên, mô tả, danh mục</li>
                        <li><strong>Hình ảnh sản phẩm</strong> - File ảnh trên server (nếu có)</li>
                        <li><strong>Cài đặt theo rạp</strong> - Giá bán và tồn kho tại các rạp</li>
                        <li><strong>Trạng thái hoạt động</strong> - Cấu hình hiển thị</li>
                    </ul>
                </div>

                @if (Model.TheaterConcessions.Any())
                {
                    <div class="mt-3">
                        <h6 class="fw-bold mb-2">Thống kê tài chính:</h6>
                        <div class="row g-3">
                            <div class="col-md-4">
                                <div class="border rounded p-3 text-center">
                                    <div class="text-muted small">Giá trị tồn kho</div>
                                    <div class="fw-bold text-warning">
                                        @Model.TheaterConcessions.Sum(tc => tc.StockLeft * tc.Price).ToString("N0") ₫
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="border rounded p-3 text-center">
                                    <div class="text-muted small">Giá trung bình</div>
                                    <div class="fw-bold text-info">
                                        @Model.TheaterConcessions.Average(tc => tc.Price).ToString("N0") ₫
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="border rounded p-3 text-center">
                                    <div class="text-muted small">Tổng tồn kho</div>
                                    <div class="fw-bold text-success">@Model.TheaterConcessions.Sum(tc => tc.StockLeft) sản phẩm</div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Action Buttons -->
<div class="row mt-4">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center">
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-2"></i>Quay lại danh sách
            </a>
            <div class="d-flex gap-2">
                <a asp-action="Details" asp-route-id="@Model.ID" class="btn btn-outline-info">
                    <i class="fas fa-eye me-2"></i>Xem chi tiết
                </a>
                <a asp-action="Edit" asp-route-id="@Model.ID" class="btn btn-outline-warning">
                    <i class="fas fa-edit me-2"></i>Chỉnh sửa thay vì xóa
                </a>
                @if (Model.IsActive)
                {
                    <button class="btn btn-outline-secondary" onclick="toggleStatus()" title="Ngưng hoạt động trước khi xóa">
                        <i class="fas fa-pause me-2"></i>Ngưng hoạt động trước
                    </button>
                }
                <form asp-action="Delete" method="post" class="d-inline" onsubmit="return confirmDelete()">
                    <input asp-for="ID" type="hidden" />
                    <button type="submit" class="btn btn-danger" id="deleteBtn">
                        <i class="fas fa-trash me-2"></i>Xác nhận xóa
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetCategoryBadgeClass(string category)
    {
        return category switch
        {
            "Food" => "bg-danger text-white",
            "Drink" => "bg-info text-white",
            "Combo" => "bg-success text-white",
            "Snack" => "bg-warning text-dark",
            "Dessert" => "bg-pink text-white",
            _ => "bg-secondary text-white"
        };
    }

    private string GetCategoryIcon(string category)
    {
        return category switch
        {
            "Food" => "fas fa-utensils",
            "Drink" => "fas fa-coffee",
            "Combo" => "fas fa-box-open",
            "Snack" => "fas fa-cookie",
            "Dessert" => "fas fa-ice-cream",
            _ => "fas fa-question"
        };
    }

    private string GetCategoryDisplayName(string category)
    {
        return category switch
        {
            "Food" => "Đồ ăn",
            "Drink" => "Đồ uống",
            "Combo" => "Combo",
            "Snack" => "Snack",
            "Dessert" => "Tráng miệng",
            _ => "Khác"
        };
    }
}

<style>
    .card {
        transition: all 0.3s ease;
    }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.1) !important;
        }

    .border-danger {
        border-color: #dc3545 !important;
    }

    .btn {
        transition: all 0.3s ease;
    }

        .btn:hover:not(:disabled) {
            transform: translateY(-1px);
        }

    .alert {
        border: none;
        border-radius: 10px;
    }

    .card-img {
        transition: all 0.3s ease;
    }

    .bg-pink {
        background-color: #e83e8c !important;
    }

    /* Danger pulse animation */
    .text-danger {
        animation: dangerPulse 2s infinite;
    }



    /* Warning overlay */
    .position-absolute.top-0.start-0 {
        border-radius: 0 0 0.375rem 0.375rem;
    }



    .d-flex.justify-content-between .d-flex {
        justify-content: center;
    }

    .card-img {
        height: 200px !important;
    }

    }

    /* Financial stats highlighting */
    .border:hover {
        border-color: #dc3545 !important;
        transform: translateY(-2px);
        transition: all 0.3s ease;
    }
</style>

@section Scripts {
    <script>
        function confirmDelete() {
            event.preventDefault();

            const productName = '@Model.Name';
            const theaterCount = @Model.TheaterConcessions.Count();
            const totalStock = @Model.TheaterConcessions.Sum(tc => tc.StockLeft);
            const isActive = @Model.IsActive.ToString().ToLower();

            let warningText = `Sản phẩm này đang áp dụng tại ${theaterCount} rạp với ${totalStock} sản phẩm tồn kho.`;
            if (isActive) {
                warningText += ' Sản phẩm đang ở trạng thái hoạt động.';
            }

            const confirmed = confirm(`Xác nhận xóa sản phẩm?\n\nSản phẩm: ${productName}\nID: #@Model.ID\n\n${warningText}\n\nHành động này không thể hoàn tác!`);

            if (confirmed) {
                // Show loading state
                const deleteBtn = document.getElementById('deleteBtn');
                deleteBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Đang xóa...';
                deleteBtn.disabled = true;

                // Submit form
                event.target.submit();
            }

            return false;
        }

        async function toggleStatus() {
            try {
                const response = await fetch('@Url.Action("ToggleActiveStatus", "AdminConcession")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('[name="__RequestVerificationToken"]')?.value
                    },
                    body: JSON.stringify({ concessionId: @Model.ID })
                });

                const result = await response.json();

                if (result.success) {
                    alert('Đã cập nhật trạng thái sản phẩm.');
                    location.reload();
                } else {
                    throw new Error(result.message || 'Có lỗi xảy ra');
                }
            } catch (error) {
                alert('Có lỗi xảy ra khi cập nhật trạng thái');
            }
        }

        // Add warning animations and effects
        document.addEventListener('DOMContentLoaded', function() {
            // Animate danger elements
            const dangerElements = document.querySelectorAll('.text-danger, .border-danger');
            dangerElements.forEach((el, index) => {
                setTimeout(() => {
                    el.style.animation = 'dangerPulse 2s infinite';
                }, index * 200);
            });

            // Show warning for products with data
            const theaterCount = @Model.TheaterConcessions.Count();
            const totalStock = @Model.TheaterConcessions.Sum(tc => tc.StockLeft);

            if (theaterCount > 0 || totalStock > 0) {
                setTimeout(() => {
                    alert('Cảnh báo: Sản phẩm này có dữ liệu liên quan. Hãy cân nhắc kỹ trước khi xóa.');
                }, 1000);
            }

            // Show notification if product is still active
            if (@Model.IsActive.ToString().ToLower()) {
                setTimeout(() => {
                    alert('Lưu ý: Sản phẩm này đang hoạt động. Khuyên bạn ngưng hoạt động trước khi xóa.');
                }, 1500);
            }
        });
    </script>
}

@{
    Html.AntiForgeryToken();
}