@model IEnumerable<DKMovies.Models.Concession>

@{
    ViewData["Title"] = "Quản lý đồ ăn";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="mb-4">
    <div class="d-flex align-items-center justify-content-between">
        <div>
            <h2 class="mb-1 fw-bold text-dark">
                <i class="fas fa-hamburger text-primary me-2"></i>Quản lý đồ ăn & thức uống
            </h2>
            <p class="text-muted mb-0">Quản lý sản phẩm bán tại rạp chiếu phim</p>
        </div>
        <div class="d-flex gap-2">
            <button class="btn btn-outline-secondary btn-sm" onclick="location.reload()">
                <i class="fas fa-sync-alt me-1"></i>Làm mới
            </button>
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus me-2"></i>Thêm sản phẩm
            </a>
        </div>
    </div>
</div>

<!-- Statistics Cards -->
<div class="row g-3 mb-4">
    <div class="col-xl-3 col-md-6">
        <div class="card border-0 bg-primary text-white shadow-sm">
            <div class="card-body p-3">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h6 class="text-white-50 mb-1">Tổng sản phẩm</h6>
                        <h4 class="mb-0" id="totalConcessions">@ViewBag.TotalConcessions</h4>
                    </div>
                    <div class="ms-3">
                        <i class="fas fa-box fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6">
        <div class="card border-0 bg-success text-white shadow-sm">
            <div class="card-body p-3">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h6 class="text-white-50 mb-1">Đang bán</h6>
                        <h4 class="mb-0" id="availableConcessions">@ViewBag.AvailableConcessions</h4>
                    </div>
                    <div class="ms-3">
                        <i class="fas fa-store fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6">
        <div class="card border-0 bg-warning text-white shadow-sm">
            <div class="card-body p-3">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h6 class="text-white-50 mb-1">Sắp hết hàng</h6>
                        <h4 class="mb-0" id="lowStockItems">@ViewBag.LowStockItems</h4>
                    </div>
                    <div class="ms-3">
                        <i class="fas fa-exclamation-triangle fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6">
        <div class="card border-0 bg-info text-white shadow-sm">
            <div class="card-body p-3">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h6 class="text-white-50 mb-1">Doanh thu</h6>
                        <h4 class="mb-0" id="totalRevenue">0</h4>
                    </div>
                    <div class="ms-3">
                        <i class="fas fa-chart-line fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Search & Filter -->
<div class="card border-0 shadow-sm mb-4">
    <div class="card-header bg-white border-bottom-0 py-3">
        <h5 class="card-title mb-0 fw-semibold">
            <i class="fas fa-search text-primary me-2"></i>Tìm kiếm và lọc
        </h5>
    </div>
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-4">
                <label class="form-label fw-medium">Từ khóa</label>
                <input type="text" name="searchString" value="@ViewData["CurrentFilter"]"
                       class="form-control" placeholder="Tìm theo tên sản phẩm, mô tả...">
            </div>
            <div class="col-md-2">
                <label class="form-label fw-medium">Danh mục</label>
                <select name="category" class="form-select">
                    <option value="">Tất cả</option>
                    <option value="Đồ uống" selected="@(ViewData["CurrentCategory"]?.ToString() == "Đồ uống" ? "selected" : null)">Đồ uống</option>
                    <option value="Bắp rang" selected="@(ViewData["CurrentCategory"]?.ToString() == "Bắp rang" ? "selected" : null)">Bắp rang</option>
                    <option value="Kẹo" selected="@(ViewData["CurrentCategory"]?.ToString() == "Kẹo" ? "selected" : null)">Kẹo</option>
                    <option value="Combo" selected="@(ViewData["CurrentCategory"]?.ToString() == "Combo" ? "selected" : null)">Combo</option>
                    <option value="Đồ ăn nhanh" selected="@(ViewData["CurrentCategory"]?.ToString() == "Đồ ăn nhanh" ? "selected" : null)">Đồ ăn nhanh</option>
                    <option value="Khác" selected="@(ViewData["CurrentCategory"]?.ToString() == "Khác" ? "selected" : null)">Khác</option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label fw-medium">Trạng thái</label>
                <select name="status" class="form-select">
                    <option value="">Tất cả</option>
                    <option value="available" selected="@(ViewData["CurrentStatus"]?.ToString() == "available" ? "selected" : null)">Đang bán</option>
                    <option value="unavailable" selected="@(ViewData["CurrentStatus"]?.ToString() == "unavailable" ? "selected" : null)">Ngưng bán</option>
                    <option value="low_stock" selected="@(ViewData["CurrentStatus"]?.ToString() == "low_stock" ? "selected" : null)">Sắp hết</option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label fw-medium">Sắp xếp theo</label>
                @{
                    var currentSort = ViewData["CurrentSort"]?.ToString() ?? "";
                }
                <select name="sortOrder" class="form-select">
                    <option value="" selected="@(currentSort == "" ? "selected" : null)">Tên (A-Z)</option>
                    <option value="name_desc" selected="@(currentSort == "name_desc" ? "selected" : null)">Tên (Z-A)</option>
                    <option value="Price" selected="@(currentSort == "Price" ? "selected" : null)">Giá (Thấp-Cao)</option>
                    <option value="price_desc" selected="@(currentSort == "price_desc" ? "selected" : null)">Giá (Cao-Thấp)</option>
                    <option value="Stock" selected="@(currentSort == "Stock" ? "selected" : null)">Tồn kho (Ít-Nhiều)</option>
                    <option value="stock_desc" selected="@(currentSort == "stock_desc" ? "selected" : null)">Tồn kho (Nhiều-Ít)</option>
                </select>
            </div>
            <div class="col-md-2 d-flex align-items-end">
                <button type="submit" class="btn btn-primary w-100">
                    <i class="fas fa-search me-1"></i>Tìm kiếm
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Concessions Grid -->
<div class="card border-0 shadow-sm">
    <div class="card-header bg-white border-bottom-0 py-3">
        <div class="d-flex justify-content-between align-items-center">
            <h5 class="card-title mb-0 fw-semibold">
                <i class="fas fa-th-large text-info me-2"></i>Danh sách sản phẩm
            </h5>
            <span class="badge bg-light text-dark">@ViewBag.TotalConcessions sản phẩm</span>
        </div>
    </div>
    <div class="card-body">
        @if (Model.Any())
        {
            <div class="row g-4">
                @foreach (var concession in Model)
                {
                    <div class="col-xl-3 col-lg-4 col-md-6">
                        <div class="card border-0 shadow-sm h-100 concession-card @(!concession.IsAvailable ? "unavailable" : "")">
                            <div class="position-relative">
                                <img src="@(!string.IsNullOrEmpty(concession.ImagePath) ? concession.ImagePath : "/images/default-concession.jpg")"
                                     alt="@concession.Name"
                                     class="card-img-top"
                                     style="height: 200px; object-fit: cover;"
                                     onerror="this.src='/images/default-concession.jpg'" />

                                <!-- Status Badge -->
                                <div class="position-absolute top-0 start-0 m-2">
                                    @if (!concession.IsAvailable)
                                    {
                                        <span class="badge bg-danger">Ngưng bán</span>
                                    }
                                    else if (concession.StockQuantity <= 10)
                                    {
                                        <span class="badge bg-warning text-dark">Sắp hết</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-success">Đang bán</span>
                                    }
                                </div>

                                <!-- Category Badge -->
                                <div class="position-absolute top-0 end-0 m-2">
                                    <span class="badge @GetCategoryBadgeClass(concession.Category)">
                                        <i class="@GetCategoryIcon(concession.Category) me-1"></i>
                                        @concession.Category
                                    </span>
                                </div>

                                <!-- Stock Badge -->
                                <div class="position-absolute bottom-0 end-0 m-2">
                                    <span class="badge bg-dark">
                                        <i class="fas fa-boxes me-1"></i>@concession.StockQuantity
                                    </span>
                                </div>
                            </div>

                            <div class="card-body d-flex flex-column">
                                <h6 class="card-title fw-bold mb-2">@concession.Name</h6>
                                <p class="card-text text-muted small flex-grow-1">
                                    @(string.IsNullOrEmpty(concession.Description) ? "Chưa có mô tả" :
                                        (concession.Description.Length > 80 ? concession.Description.Substring(0, 80) + "..." : concession.Description))
                                </p>

                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <div class="fw-bold text-success fs-5">
                                        @String.Format("{0:N0} ₫", concession.Price)
                                    </div>
                                    <div class="d-flex gap-1">
                                        <!-- Quick Stock Update -->
                                        <button class="btn btn-sm btn-outline-secondary"
                                                onclick="showStockModal(@concession.ID, '@concession.Name', @concession.StockQuantity)"
                                                title="Cập nhật tồn kho">
                                            <i class="fas fa-boxes"></i>
                                        </button>

                                        <!-- Toggle Availability -->
                                        <button class="btn btn-sm @(concession.IsAvailable ? "btn-success" : "btn-outline-danger")"
                                                onclick="toggleAvailability(@concession.ID, this)"
                                                title="@(concession.IsAvailable ? "Ngưng bán" : "Bắt đầu bán")">
                                            <i class="fas @(concession.IsAvailable ? "fa-eye" : "fa-eye-slash")"></i>
                                        </button>
                                    </div>
                                </div>

                                <div class="btn-group w-100" role="group">
                                    <a asp-action="Details" asp-route-id="@concession.ID"
                                       class="btn btn-outline-info btn-sm" title="Xem chi tiết">
                                        <i class="fas fa-eye me-1"></i>Chi tiết
                                    </a>
                                    <a asp-action="Edit" asp-route-id="@concession.ID"
                                       class="btn btn-outline-warning btn-sm" title="Chỉnh sửa">
                                        <i class="fas fa-edit me-1"></i>Sửa
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@concession.ID"
                                       class="btn btn-outline-danger btn-sm" title="Xóa">
                                        <i class="fas fa-trash me-1"></i>Xóa
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-hamburger text-muted fs-1 mb-3"></i>
                <h5 class="text-muted">Không tìm thấy sản phẩm nào</h5>
                <p class="text-muted mb-0">Thử thay đổi bộ lọc hoặc từ khóa tìm kiếm.</p>
            </div>
        }
    </div>

    @if (Model.Any())
    {
        <!-- Pagination -->
        <div class="card-footer bg-white border-top-0 py-3">
            <div class="d-flex justify-content-between align-items-center">
                <div class="text-muted">
                    Hiển thị @((ViewBag.CurrentPage - 1) * 12 + 1) - @Math.Min(ViewBag.CurrentPage * 12, ViewBag.TotalConcessions)
                    trong tổng số @ViewBag.TotalConcessions sản phẩm
                </div>

                @if (ViewBag.TotalPages > 1)
                {
                    <nav aria-label="Concession pagination">
                        <ul class="pagination pagination-sm mb-0">
                            @if (ViewBag.CurrentPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-action="Index"
                                       asp-route-page="@(ViewBag.CurrentPage - 1)"
                                       asp-route-searchString="@ViewData["CurrentFilter"]"
                                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                                       asp-route-category="@ViewData["CurrentCategory"]"
                                       asp-route-status="@ViewData["CurrentStatus"]">
                                        <i class="fas fa-chevron-left"></i>
                                    </a>
                                </li>
                            }

                            @for (int i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2); i++)
                            {
                                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                    <a class="page-link" asp-action="Index"
                                       asp-route-page="@i"
                                       asp-route-searchString="@ViewData["CurrentFilter"]"
                                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                                       asp-route-category="@ViewData["CurrentCategory"]"
                                       asp-route-status="@ViewData["CurrentStatus"]">@i</a>
                                </li>
                            }

                            @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-action="Index"
                                       asp-route-page="@(ViewBag.CurrentPage + 1)"
                                       asp-route-searchString="@ViewData["CurrentFilter"]"
                                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                                       asp-route-category="@ViewData["CurrentCategory"]"
                                       asp-route-status="@ViewData["CurrentStatus"]">
                                        <i class="fas fa-chevron-right"></i>
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            </div>
        </div>
    }
</div>

<!-- Stock Update Modal -->
<div class="modal fade" id="stockModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-boxes text-primary me-2"></i>Cập nhật tồn kho
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label fw-medium">Sản phẩm:</label>
                    <div class="fw-bold" id="stockProductName"></div>
                </div>
                <div class="mb-3">
                    <label class="form-label fw-medium">Tồn kho hiện tại:</label>
                    <div class="fw-bold text-info" id="currentStock"></div>
                </div>
                <div class="mb-3">
                    <label for="newStock" class="form-label fw-medium">Tồn kho mới:</label>
                    <input type="number" class="form-control" id="newStock" min="0" placeholder="Nhập số lượng mới">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" onclick="updateStock()">
                    <i class="fas fa-save me-1"></i>Cập nhật
                </button>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetCategoryBadgeClass(string category)
    {
        return category switch
        {
            "Đồ uống" => "bg-info text-white",
            "Bắp rang" => "bg-warning text-dark",
            "Kẹo" => "bg-danger text-white",
            "Combo" => "bg-success text-white",
            "Đồ ăn nhanh" => "bg-primary text-white",
            _ => "bg-secondary text-white"
        };
    }

    private string GetCategoryIcon(string category)
    {
        return category switch
        {
            "Đồ uống" => "fas fa-coffee",
            "Bắp rang" => "fas fa-seedling",
            "Kẹo" => "fas fa-candy-cane",
            "Combo" => "fas fa-box-open",
            "Đồ ăn nhanh" => "fas fa-hamburger",
            _ => "fas fa-utensils"
        };
    }
}

<style>
    .concession-card {
        transition: all 0.3s ease;
    }

        .concession-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0,0,0,0.15) !important;
        }

        .concession-card.unavailable {
            opacity: 0.7;
            filter: grayscale(50%);
        }

    .card-img-top {
        transition: all 0.3s ease;
    }

    .concession-card:hover .card-img-top {
        transform: scale(1.05);
    }

    .btn {
        transition: all 0.3s ease;
    }

        .btn:hover {
            transform: translateY(-1px);
        }

    @media (max-width: 768px) {
        .btn-group .btn

    {
        font-size: 0.75rem;
        padding: 0.25rem 0.5rem;
    }

    }
</style>

@section Scripts {
    <script>
        let currentConcessionId = 0;

        // Auto-refresh statistics every 30 seconds
        setInterval(loadConcessionStatistics, 30000);

        // Load statistics on page load
        document.addEventListener('DOMContentLoaded', function() {
            loadConcessionStatistics();
        });

        async function loadConcessionStatistics() {
            try {
                const response = await fetch('@Url.Action("GetConcessionStatistics", "AdminConcession")');
                const result = await response.json();

                if (result.success) {
                    document.getElementById('totalConcessions').textContent = result.data.totalConcessions.toLocaleString();
                    document.getElementById('availableConcessions').textContent = result.data.availableConcessions.toLocaleString();
                    document.getElementById('lowStockItems').textContent = result.data.lowStockItems.toLocaleString();
                    document.getElementById('totalRevenue').textContent = result.data.totalRevenue.toLocaleString() + ' ₫';
                }
            } catch (error) {
                console.error('Error loading statistics:', error);
            }
        }

        async function toggleAvailability(concessionId, button) {
            const originalText = button.innerHTML;
            button.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
            button.disabled = true;

            try {
                const response = await fetch('@Url.Action("ToggleAvailability", "AdminConcession")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('[name="__RequestVerificationToken"]')?.value
                    },
                    body: JSON.stringify({ concessionId: concessionId })
                });

                const result = await response.json();

                if (result.success) {
                    const card = button.closest('.concession-card');
                    const statusBadge = card.querySelector('.badge:first-child');

                    if (result.newStatus) {
                        button.className = 'btn btn-sm btn-success';
                        button.innerHTML = '<i class="fas fa-eye"></i>';
                        button.title = 'Ngưng bán';
                        statusBadge.className = 'badge bg-success';
                        statusBadge.textContent = 'Đang bán';
                        card.classList.remove('unavailable');
                    } else {
                        button.className = 'btn btn-sm btn-outline-danger';
                        button.innerHTML = '<i class="fas fa-eye-slash"></i>';
                        button.title = 'Bắt đầu bán';
                        statusBadge.className = 'badge bg-danger';
                        statusBadge.textContent = 'Ngưng bán';
                        card.classList.add('unavailable');
                    }
                    showToast(result.message, 'success');
                } else {
                    button.innerHTML = originalText;
                    showToast(result.message || 'Có lỗi xảy ra', 'error');
                }
            } catch (error) {
                button.innerHTML = originalText;
                showToast('Có lỗi xảy ra khi cập nhật trạng thái', 'error');
                console.error('Error:', error);
            } finally {
                button.disabled = false;
            }
        }

        function showStockModal(concessionId, productName, currentStockValue) {
            currentConcessionId = concessionId;
            document.getElementById('stockProductName').textContent = productName;
            document.getElementById('currentStock').textContent = currentStockValue + ' sản phẩm';
            document.getElementById('newStock').value = currentStockValue;

            new bootstrap.Modal(document.getElementById('stockModal')).show();
        }

        async function updateStock() {
            const newStock = parseInt(document.getElementById('newStock').value);

            if (isNaN(newStock) || newStock < 0) {
                showToast('Vui lòng nhập số lượng hợp lệ', 'error');
                return;
            }

            try {
                const response = await fetch('@Url.Action("UpdateStock", "AdminConcession")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('[name="__RequestVerificationToken"]')?.value
                    },
                    body: JSON.stringify({
                        concessionId: currentConcessionId,
                        newStock: newStock
                    })
                });

                const result = await response.json();

                if (result.success) {
                    // Update the stock badge on the card
                    const stockBadges = document.querySelectorAll('.badge.bg-dark');
                    stockBadges.forEach(badge => {
                        const card = badge.closest('.concession-card');
                        const detailsLink = card.querySelector('a[href*="Details"]');
                        if (detailsLink && detailsLink.href.includes(currentConcessionId)) {
                            badge.innerHTML = `<i class="fas fa-boxes me-1"></i>${newStock}`;

                            // Update status badge if needed
                            const statusBadge = card.querySelector('.badge:first-child');
                            if (newStock <= 10 && !statusBadge.textContent.includes('Ngưng')) {
                                statusBadge.className = 'badge bg-warning text-dark';
                                statusBadge.textContent = 'Sắp hết';
                            } else if (newStock > 10 && statusBadge.textContent === 'Sắp hết') {
                                statusBadge.className = 'badge bg-success';
                                statusBadge.textContent = 'Đang bán';
                            }
                        }
                    });

                    bootstrap.Modal.getInstance(document.getElementById('stockModal')).hide();
                    showToast(result.message, 'success');
                    loadConcessionStatistics(); // Refresh statistics
                } else {
                    showToast(result.message || 'Có lỗi xảy ra', 'error');
                }
            } catch (error) {
                showToast('Có lỗi xảy ra khi cập nhật tồn kho', 'error');
                console.error('Error:', error);
            }
        }

        function showToast(message, type) {
            const toast = document.createElement('div');
            toast.className = `alert alert-${type === 'success' ? 'success' : 'danger'} position-fixed`;
            toast.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            toast.innerHTML = `
                <i class="fas fa-${type === 'success' ? 'check' : 'exclamation-triangle'} me-2"></i>
                ${message}
                <button type="button" class="btn-close ms-2" onclick="this.parentElement.remove()"></button>
            `;

            document.body.appendChild(toast);

            setTimeout(() => {
                if (toast.parentElement) {
                    toast.remove();
                }
            }, 3000);
        }

        // Handle image loading errors
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('img').forEach(img => {
                img.addEventListener('error', function() {
                    if (this.src.includes('default-concession.jpg')) return;
                    this.src = '/images/default-concession.jpg';
                    this.alt = 'Hình ảnh không khả dụng';
                });
            });
        });
    </script>
}

@{
    Html.AntiForgeryToken();
}