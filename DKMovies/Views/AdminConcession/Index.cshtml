@model IEnumerable<DKMovies.Models.Concession>

@{
    ViewData["Title"] = "Quản lý đồ ăn";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="mb-4">
    <div class="d-flex align-items-center justify-content-between">
        <div>
            <h2 class="mb-1 fw-bold text-dark">
                <i class="fas fa-hamburger text-primary me-2"></i>Quản lý đồ ăn & thức uống
            </h2>
            <p class="text-muted mb-0">Quản lý sản phẩm bán tại rạp chiếu phim</p>
        </div>
        <div class="d-flex gap-2">
            <button class="btn btn-outline-secondary btn-sm" onclick="location.reload()">
                <i class="fas fa-sync-alt me-1"></i>Làm mới
            </button>
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus me-2"></i>Thêm sản phẩm
            </a>
        </div>
    </div>
</div>

<!-- Statistics Cards -->
<div class="row g-3 mb-4">
    <div class="col-xl-3 col-md-6">
        <div class="card border-0 bg-primary text-white shadow-sm">
            <div class="card-body p-3">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h6 class="text-white-50 mb-1">Tổng sản phẩm</h6>
                        <h4 class="mb-0">@ViewBag.TotalConcessions</h4>
                    </div>
                    <div class="ms-3">
                        <i class="fas fa-box fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6">
        <div class="card border-0 bg-success text-white shadow-sm">
            <div class="card-body p-3">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h6 class="text-white-50 mb-1">Đang hoạt động</h6>
                        <h4 class="mb-0">@ViewBag.ActiveConcessions</h4>
                    </div>
                    <div class="ms-3">
                        <i class="fas fa-check fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6">
        <div class="card border-0 bg-warning text-white shadow-sm">
            <div class="card-body p-3">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h6 class="text-white-50 mb-1">Đang bán</h6>
                        <h4 class="mb-0">@ViewBag.AvailableConcessions</h4>
                    </div>
                    <div class="ms-3">
                        <i class="fas fa-store fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6">
        <div class="card border-0 bg-danger text-white shadow-sm">
            <div class="card-body p-3">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h6 class="text-white-50 mb-1">Sắp hết hàng</h6>
                        <h4 class="mb-0">@ViewBag.LowStockItems</h4>
                    </div>
                    <div class="ms-3">
                        <i class="fas fa-exclamation-triangle fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Search & Filter -->
<div class="card border-0 shadow-sm mb-4">
    <div class="card-header bg-white border-bottom-0 py-3">
        <h5 class="card-title mb-0 fw-semibold">
            <i class="fas fa-search text-primary me-2"></i>Tìm kiếm và lọc
        </h5>
    </div>
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-4">
                <label class="form-label fw-medium">Từ khóa</label>
                <input type="text" name="searchString" value="@ViewData["CurrentFilter"]"
                       class="form-control" placeholder="Tìm theo tên sản phẩm, mô tả...">
            </div>
            <div class="col-md-2">
                <label class="form-label fw-medium">Danh mục</label>
                <select name="category" class="form-select">
                    <option value="">Tất cả</option>
                    <option value="Food" selected="@(ViewData["CurrentCategory"]?.ToString() == "Food")">Đồ ăn</option>
                    <option value="Drink" selected="@(ViewData["CurrentCategory"]?.ToString() == "Drink")">Đồ uống</option>
                    <option value="Combo" selected="@(ViewData["CurrentCategory"]?.ToString() == "Combo")">Combo</option>
                    <option value="Snack" selected="@(ViewData["CurrentCategory"]?.ToString() == "Snack")">Snack</option>
                    <option value="Dessert" selected="@(ViewData["CurrentCategory"]?.ToString() == "Dessert")">Tráng miệng</option>
                    <option value="Other" selected="@(ViewData["CurrentCategory"]?.ToString() == "Other")">Khác</option>
                </select>

            </div>
            <div class="col-md-2">
                <label class="form-label fw-medium">Trạng thái</label>
                <select name="status" class="form-select">
                    <option value="">Tất cả</option>
                    <option value="active" selected="@(ViewData["CurrentStatus"]?.ToString() == "active")">Hoạt động</option>
                    <option value="inactive" selected="@(ViewData["CurrentStatus"]?.ToString() == "inactive")">Ngưng hoạt động</option>
                    <option value="available" selected="@(ViewData["CurrentStatus"]?.ToString() == "available")">Đang bán</option>
                    <option value="low_stock" selected="@(ViewData["CurrentStatus"]?.ToString() == "low_stock")">Sắp hết</option>
                </select>

            </div>
            <div class="col-md-2">
                <label class="form-label fw-medium">Sắp xếp theo</label>
                @{
                    var currentSort = ViewData["CurrentSort"]?.ToString() ?? "";
                }
                <select name="sortOrder" class="form-select">
                    <option value="" selected="@(currentSort == "")">Tên (A-Z)</option>
                    <option value="name_desc" selected="@(currentSort == "name_desc")">Tên (Z-A)</option>
                    <option value="Category" selected="@(currentSort == "Category")">Danh mục (A-Z)</option>
                    <option value="category_desc" selected="@(currentSort == "category_desc")">Danh mục (Z-A)</option>
                </select>

            </div>
            <div class="col-md-2 d-flex align-items-end">
                <button type="submit" class="btn btn-primary w-100">
                    <i class="fas fa-search me-1"></i>Tìm kiếm
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Concessions Grid -->
<div class="card border-0 shadow-sm">
    <div class="card-header bg-white border-bottom-0 py-3">
        <div class="d-flex justify-content-between align-items-center">
            <h5 class="card-title mb-0 fw-semibold">
                <i class="fas fa-th-large text-info me-2"></i>Danh sách sản phẩm
            </h5>
            <span class="badge bg-light text-dark">@ViewBag.TotalConcessions sản phẩm</span>
        </div>
    </div>
    <div class="card-body">
        @if (Model.Any())
        {
            <div class="row g-4">
                @foreach (var concession in Model)
                {
                    <div class="col-xl-3 col-lg-4 col-md-6">
                        <div class="card border-0 shadow-sm h-100 concession-card @(!concession.IsActive ? "inactive" : "")">
                            <div class="position-relative">
                                <img src="@(!string.IsNullOrEmpty(concession.ImagePath) ? concession.ImagePath : "/images/default-concession.jpg")"
                                     alt="@concession.Name"
                                     class="card-img-top"
                                     style="height: 200px; object-fit: cover;"
                                     onerror="this.src='/images/default-concession.jpg'" />

                                <!-- Status Badge -->
                                <div class="position-absolute top-0 start-0 m-2">
                                    @if (!concession.IsActive)
                                    {
                                        <span class="badge bg-danger">Ngưng hoạt động</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-success">Hoạt động</span>
                                    }
                                </div>

                                <!-- Category Badge -->
                                <div class="position-absolute top-0 end-0 m-2">
                                    <span class="badge @GetCategoryBadgeClass(concession.Category)">
                                        <i class="@GetCategoryIcon(concession.Category) me-1"></i>
                                        @GetCategoryDisplayName(concession.Category)
                                    </span>
                                </div>

                                <!-- Theater Count Badge -->
                                <div class="position-absolute bottom-0 end-0 m-2">
                                    <span class="badge bg-dark">
                                        <i class="fas fa-building me-1"></i>@concession.TheaterConcessions.Count()
                                    </span>
                                </div>
                            </div>

                            <div class="card-body d-flex flex-column">
                                <h6 class="card-title fw-bold mb-2">@concession.Name</h6>
                                <p class="card-text text-muted small flex-grow-1">
                                    @(string.IsNullOrEmpty(concession.Description) ? "Chưa có mô tả" :
                                        (concession.Description.Length > 80 ? concession.Description.Substring(0, 80) + "..." : concession.Description))
                                </p>

                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <div class="fw-bold text-info fs-5">
                                        @(concession.TheaterConcessions.Any() ? concession.TheaterConcessions.Average(tc => tc.Price).ToString("N0") + " ₫" : "Chưa có giá")
                                    </div>
                                    <div class="d-flex gap-1">
                                        <!-- Toggle Active Status -->
                                        <button class="btn btn-sm @(concession.IsActive ? "btn-success" : "btn-outline-secondary")"
                                                onclick="toggleActiveStatus(@concession.ID, this)"
                                                title="@(concession.IsActive ? "Ngưng hoạt động" : "Kích hoạt")">
                                            <i class="fas @(concession.IsActive ? "fa-check" : "fa-times")"></i>
                                        </button>
                                    </div>
                                </div>

                                <div class="btn-group w-100" role="group">
                                    <a asp-action="Details" asp-route-id="@concession.ID"
                                       class="btn btn-outline-info btn-sm" title="Xem chi tiết">
                                        <i class="fas fa-eye me-1"></i>Chi tiết
                                    </a>
                                    <a asp-action="Edit" asp-route-id="@concession.ID"
                                       class="btn btn-outline-warning btn-sm" title="Chỉnh sửa">
                                        <i class="fas fa-edit me-1"></i>Sửa
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@concession.ID"
                                       class="btn btn-outline-danger btn-sm" title="Xóa">
                                        <i class="fas fa-trash me-1"></i>Xóa
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-hamburger text-muted fs-1 mb-3"></i>
                <h5 class="text-muted">Không tìm thấy sản phẩm nào</h5>
                <p class="text-muted mb-0">Thử thay đổi bộ lọc hoặc từ khóa tìm kiếm.</p>
            </div>
        }
    </div>

    @if (Model.Any())
    {
        <!-- Pagination -->
        <div class="card-footer bg-white border-top-0 py-3">
            <div class="d-flex justify-content-between align-items-center">
                <div class="text-muted">
                    Hiển thị @((ViewBag.CurrentPage - 1) * 12 + 1) - @Math.Min(ViewBag.CurrentPage * 12, ViewBag.TotalConcessions)
                    trong tổng số @ViewBag.TotalConcessions sản phẩm
                </div>

                @if (ViewBag.TotalPages > 1)
                {
                    <nav aria-label="Concession pagination">
                        <ul class="pagination pagination-sm mb-0">
                            @if (ViewBag.CurrentPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-action="Index"
                                       asp-route-page="@(ViewBag.CurrentPage - 1)"
                                       asp-route-searchString="@ViewData["CurrentFilter"]"
                                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                                       asp-route-category="@ViewData["CurrentCategory"]"
                                       asp-route-status="@ViewData["CurrentStatus"]">
                                        <i class="fas fa-chevron-left"></i>
                                    </a>
                                </li>
                            }

                            @for (int i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2); i++)
                            {
                                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                    <a class="page-link" asp-action="Index"
                                       asp-route-page="@i"
                                       asp-route-searchString="@ViewData["CurrentFilter"]"
                                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                                       asp-route-category="@ViewData["CurrentCategory"]"
                                       asp-route-status="@ViewData["CurrentStatus"]">@i</a>
                                </li>
                            }

                            @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-action="Index"
                                       asp-route-page="@(ViewBag.CurrentPage + 1)"
                                       asp-route-searchString="@ViewData["CurrentFilter"]"
                                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                                       asp-route-category="@ViewData["CurrentCategory"]"
                                       asp-route-status="@ViewData["CurrentStatus"]">
                                        <i class="fas fa-chevron-right"></i>
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            </div>
        </div>
    }
</div>

@functions {
    private string GetCategoryBadgeClass(string category)
    {
        return category switch
        {
            "Food" => "bg-danger text-white",
            "Drink" => "bg-info text-white", 
            "Combo" => "bg-success text-white",
            "Snack" => "bg-warning text-dark",
            "Dessert" => "bg-pink text-white",
            _ => "bg-secondary text-white"
        };
    }

    private string GetCategoryIcon(string category)
    {
        return category switch
        {
            "Food" => "fas fa-utensils",
            "Drink" => "fas fa-coffee",
            "Combo" => "fas fa-box-open", 
            "Snack" => "fas fa-cookie",
            "Dessert" => "fas fa-ice-cream",
            _ => "fas fa-question"
        };
    }

    private string GetCategoryDisplayName(string category)
    {
        return category switch
        {
            "Food" => "Đồ ăn",
            "Drink" => "Đồ uống",
            "Combo" => "Combo",
            "Snack" => "Snack", 
            "Dessert" => "Tráng miệng",
            _ => "Khác"
        };
    }
}

<style>
    .concession-card {
        transition: all 0.3s ease;
    }

        .concession-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0,0,0,0.15) !important;
        }

        .concession-card.inactive {
            opacity: 0.7;
            filter: grayscale(50%);
        }

    .card-img-top {
        transition: all 0.3s ease;
    }

    .concession-card:hover .card-img-top {
        transform: scale(1.05);
    }

    .btn {
        transition: all 0.3s ease;
    }

        .btn:hover {
            transform: translateY(-1px);
        }

    .bg-pink {
        background-color: #e83e8c !important;
    }


</style>

@section Scripts {
    <script>
        async function toggleActiveStatus(concessionId, button) {
            const originalText = button.innerHTML;
            button.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
            button.disabled = true;

            try {
                const response = await fetch('@Url.Action("ToggleActiveStatus", "AdminConcession")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('[name="__RequestVerificationToken"]')?.value
                    },
                    body: JSON.stringify({ concessionId: concessionId })
                });

                const result = await response.json();

                if (result.success) {
                    const card = button.closest('.concession-card');
                    const statusBadge = card.querySelector('.badge:first-child');

                    if (result.newStatus) {
                        button.className = 'btn btn-sm btn-success';
                        button.innerHTML = '<i class="fas fa-check"></i>';
                        button.title = 'Ngưng hoạt động';
                        statusBadge.className = 'badge bg-success';
                        statusBadge.textContent = 'Hoạt động';
                        card.classList.remove('inactive');
                    } else {
                        button.className = 'btn btn-sm btn-outline-secondary';
                        button.innerHTML = '<i class="fas fa-times"></i>';
                        button.title = 'Kích hoạt';
                        statusBadge.className = 'badge bg-danger';
                        statusBadge.textContent = 'Ngưng hoạt động';
                        card.classList.add('inactive');
                    }
                    showToast(result.message, 'success');
                } else {
                    button.innerHTML = originalText;
                    showToast(result.message || 'Có lỗi xảy ra', 'error');
                }
            } catch (error) {
                button.innerHTML = originalText;
                showToast('Có lỗi xảy ra khi cập nhật trạng thái', 'error');
                console.error('Error:', error);
            } finally {
                button.disabled = false;
            }
        }

        function showToast(message, type) {
            const toast = document.createElement('div');
            toast.className = `alert alert-${type === 'success' ? 'success' : 'danger'} position-fixed`;
            toast.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            toast.innerHTML = `
                <i class="fas fa-${type === 'success' ? 'check' : 'exclamation-triangle'} me-2"></i>
                ${message}
                <button type="button" class="btn-close ms-2" onclick="this.parentElement.remove()"></button>
            `;

            document.body.appendChild(toast);

            setTimeout(() => {
                if (toast.parentElement) {
                    toast.remove();
                }
            }, 3000);
        }
    </script>
}

@{
    Html.AntiForgeryToken();
}