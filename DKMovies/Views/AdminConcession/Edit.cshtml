@model DKMovies.Models.Concession
@{
    ViewData["Title"] = "Chỉnh sửa sản phẩm - " + Model.Name;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="mb-4">
    <div class="d-flex align-items-center justify-content-between">
        <div>
            <h2 class="fw-bold text-dark mb-1">
                <i class="fas fa-edit me-2 text-warning"></i>Chỉnh sửa sản phẩm
            </h2>
            <p class="text-muted mb-0">Cập nhật thông tin sản phẩm @Model.Name</p>
        </div>
        <div class="d-flex gap-2">
            <a asp-action="Details" asp-route-id="@Model.ID" class="btn btn-outline-info btn-sm">
                <i class="fas fa-eye me-1"></i>Xem chi tiết
            </a>
            <a asp-action="Index" class="btn btn-outline-secondary btn-sm">
                <i class="fas fa-arrow-left me-1"></i>Quay lại
            </a>
        </div>
    </div>
</div>

<form asp-action="Edit" method="post" enctype="multipart/form-data" id="concessionForm">
    @Html.HiddenFor(model => model.ID)

    <div class="row g-4">
        <!-- Product Image Upload -->
        <div class="col-lg-4">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-white border-bottom py-3">
                    <h6 class="card-title mb-0 fw-semibold">
                        <i class="fas fa-image me-2 text-primary"></i>Hình ảnh sản phẩm
                    </h6>
                </div>
                <div class="card-body text-center">
                    <!-- Current Image Info -->
                    <div class="alert alert-light mb-3">
                        <div class="row align-items-center">
                            <div class="col-auto">
                                <i class="fas fa-info-circle text-primary fs-4"></i>
                            </div>
                            <div class="col">
                                <div class="fw-bold">Hình ảnh hiện tại</div>
                                <small class="text-muted">Sản phẩm ID: @Model.ID</small>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <img id="imagePreview"
                             src="@(!string.IsNullOrEmpty(Model.ImagePath) ? Model.ImagePath : "/images/default-concession.jpg")"
                             alt="@Model.Name"
                             class="img-fluid rounded shadow"
                             style="max-height: 300px; object-fit: cover; width: 100%;">
                    </div>

                    <div class="mb-3">
                        <label for="imageFile" class="btn btn-outline-primary">
                            <i class="fas fa-upload me-2"></i>Thay đổi hình ảnh
                        </label>
                        <input type="file" id="imageFile" name="imageFile"
                               accept="image/*" style="display: none;" onchange="previewImage(this)">
                    </div>

                    @if (!string.IsNullOrEmpty(Model.ImagePath))
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="removeImage">
                            <label class="form-check-label text-danger" for="removeImage">
                                <i class="fas fa-trash me-1"></i>Xóa hình ảnh hiện tại
                            </label>
                        </div>
                    }

                    <small class="text-muted d-block mt-2">
                        Định dạng: JPG, PNG, GIF<br>
                        Kích thước tối đa: 5MB
                    </small>
                </div>
            </div>
        </div>

        <!-- Product Information -->
        <div class="col-lg-8">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-white border-bottom py-3">
                    <h6 class="card-title mb-0 fw-semibold">
                        <i class="fas fa-info-circle me-2 text-secondary"></i>Thông tin sản phẩm
                    </h6>
                </div>
                <div class="card-body p-4">
                    <div class="row g-3">
                        <!-- Product Name -->
                        <div class="col-md-8">
                            <label asp-for="Name" class="form-label fw-medium">
                                Tên sản phẩm <span class="text-danger">*</span>
                            </label>
                            <input asp-for="Name" class="form-control" placeholder="Nhập tên sản phẩm">
                            <span asp-validation-for="Name" class="text-danger small"></span>
                        </div>

                        <!-- Category -->
                        <div class="col-md-4">
                            <label asp-for="Category" class="form-label fw-medium">
                                Danh mục <span class="text-danger">*</span>
                            </label>
                            <select asp-for="Category" class="form-select" asp-items="ViewBag.Categories" id="categorySelect">
                                <option value="">-- Chọn danh mục --</option>
                            </select>
                            <span asp-validation-for="Category" class="text-danger small"></span>
                        </div>

                        <!-- Description -->
                        <div class="col-12">
                            <label asp-for="Description" class="form-label fw-medium">
                                Mô tả sản phẩm
                            </label>
                            <textarea asp-for="Description" class="form-control" rows="3"
                                      placeholder="Nhập mô tả chi tiết về sản phẩm..."
                                      maxlength="500"></textarea>
                            <span asp-validation-for="Description" class="text-danger small"></span>
                            <div class="form-text">
                                <span id="charCount">@(Model.Description?.Length ?? 0)</span>/500 ký tự
                            </div>
                        </div>

                        <!-- Active Status -->
                        <div class="col-12">
                            <div class="form-check form-switch">
                                <input asp-for="IsActive" class="form-check-input" type="checkbox">
                                <label asp-for="IsActive" class="form-check-label fw-medium">
                                    Trạng thái hoạt động
                                </label>
                            </div>
                            <small class="text-muted">Sản phẩm có thể được sử dụng trong hệ thống</small>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Current Status Card -->
            <div class="card border-0 shadow-sm mt-4">
                <div class="card-header bg-light border-bottom py-3">
                    <h6 class="card-title mb-0 fw-semibold">
                        <i class="fas fa-chart-bar me-2 text-info"></i>Trạng thái hiện tại
                    </h6>
                </div>
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-md-3">
                            <div class="border rounded p-3 text-center">
                                <div class="text-muted small">ID Sản phẩm</div>
                                <div class="fw-bold text-primary">#@Model.ID</div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="border rounded p-3 text-center">
                                <div class="text-muted small">Trạng thái</div>
                                <span class="badge @(Model.IsActive ? "bg-success" : "bg-danger")">
                                    @(Model.IsActive ? "Hoạt động" : "Ngưng hoạt động")
                                </span>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="border rounded p-3 text-center">
                                <div class="text-muted small">Rạp áp dụng</div>
                                <div class="fw-bold text-success">
                                    @Model.TheaterConcessions.Count()
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="border rounded p-3 text-center">
                                <div class="text-muted small">Giá trung bình</div>
                                <div class="fw-bold text-info">
                                    @if (Model.TheaterConcessions.Any())
                                    {
                                        @Model.TheaterConcessions.Average(tc => tc.Price).ToString("N0") <text>₫</text>
                                    }
                                    else
                                    {
                                        <span>Chưa có</span>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Product Preview Card -->
            <div class="card border-0 shadow-sm mt-4" id="productPreview">
                <div class="card-header bg-white border-bottom py-3">
                    <h6 class="card-title mb-0 fw-semibold">
                        <i class="fas fa-eye me-2 text-success"></i>Xem trước thay đổi
                    </h6>
                </div>
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col-auto">
                            <img id="previewImage" src="@(!string.IsNullOrEmpty(Model.ImagePath) ? Model.ImagePath : "/images/default-concession.jpg")"
                                 alt="Preview" class="rounded shadow-sm" style="width: 80px; height: 80px; object-fit: cover;">
                        </div>
                        <div class="col">
                            <div class="fw-bold text-dark mb-1" id="previewName">@Model.Name</div>
                            <div class="text-muted small mb-2" id="previewDescription">@Model.Description</div>
                            <div class="d-flex gap-2">
                                <span class="badge" id="previewCategory">@Model.Category</span>
                                <span class="badge" id="previewStatus">@(Model.IsActive ? "Hoạt động" : "Ngưng hoạt động")</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Form Actions -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <a asp-action="Index" class="btn btn-outline-secondary">
                    <i class="fas fa-times me-2"></i>Hủy bỏ
                </a>
                <div class="d-flex gap-2">
                    <button type="button" class="btn btn-outline-primary" onclick="previewChanges()">
                        <i class="fas fa-eye me-2"></i>Xem trước thay đổi
                    </button>
                    <button type="submit" class="btn btn-warning" id="submitBtn">
                        <i class="fas fa-save me-2"></i>Cập nhật sản phẩm
                    </button>
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Store original values for comparison
        const originalValues = {
            name: '@Model.Name',
            description: '@Html.Raw(Html.Encode(Model.Description ?? ""))',
            category: '@Model.Category',
            isActive: @Model.IsActive.ToString().ToLower()
        };

        $(document).ready(function() {
            // Real-time updates
            $('#Name, #Description, #Category').on('input change', function() {
                updatePreview();
                checkChanges();
            });

            $('#IsActive').on('change', function() {
                updatePreview();
            });

            // Character count for description
            $('#Description').on('input', function() {
                const length = $(this).val().length;
                $('#charCount').text(length);

                if (length > 500) {
                    $(this).addClass('is-invalid');
                    $('#charCount').addClass('text-danger');
                } else {
                    $(this).removeClass('is-invalid');
                    $('#charCount').removeClass('text-danger');
                }
            });

            // Form validation
            $('#concessionForm').submit(function(e) {
                if (!validateForm()) {
                    e.preventDefault();
                    return false;
                }

                // Show loading state
                $('#submitBtn').html('<i class="fas fa-spinner fa-spin me-2"></i>Đang cập nhật...');
                $('#submitBtn').prop('disabled', true);
            });

            // Initialize
            updatePreview();
        });

        function previewImage(input) {
            if (input.files && input.files[0]) {
                // Validate file size (5MB)
                if (input.files[0].size > 5 * 1024 * 1024) {
                    alert('Kích thước file quá lớn. Vui lòng chọn file nhỏ hơn 5MB.');
                    input.value = '';
                    return;
                }

                // Validate file type
                const allowedTypes = ['image/jpeg', 'image/png', 'image/gif'];
                if (!allowedTypes.includes(input.files[0].type)) {
                    alert('Định dạng file không được hỗ trợ. Vui lòng chọn file JPG, PNG hoặc GIF.');
                    input.value = '';
                    return;
                }

                const reader = new FileReader();
                reader.onload = function(e) {
                    document.getElementById('imagePreview').src = e.target.result;
                    document.getElementById('previewImage').src = e.target.result;
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

        function checkChanges() {
            // You can add change indicators here if needed
        }

        function updatePreview() {
            const name = $('#Name').val() || 'Tên sản phẩm';
            const description = $('#Description').val() || 'Mô tả sản phẩm...';
            const category = $('#Category').val() || 'Danh mục';
            const isActive = $('#IsActive').is(':checked');

            $('#previewName').text(name);
            $('#previewDescription').text(description.length > 50 ? description.substring(0, 50) + '...' : description);

            // Update category badge
            const categoryBadge = getCategoryBadge(category);
            $('#previewCategory').attr('class', `badge ${categoryBadge.class}`);
            $('#previewCategory').html(`<i class="${categoryBadge.icon} me-1"></i>${getCategoryDisplayName(category)}`);

            // Update status badge
            const statusBadge = $('#previewStatus');
            if (isActive) {
                statusBadge.attr('class', 'badge bg-success');
                statusBadge.html('<i class="fas fa-check me-1"></i>Hoạt động');
            } else {
                statusBadge.attr('class', 'badge bg-danger');
                statusBadge.html('<i class="fas fa-times me-1"></i>Ngưng hoạt động');
            }
        }

        function getCategoryBadge(category) {
            const badges = {
                'Food': { class: 'bg-danger text-white', icon: 'fas fa-utensils' },
                'Drink': { class: 'bg-info text-white', icon: 'fas fa-coffee' },
                'Combo': { class: 'bg-success text-white', icon: 'fas fa-box-open' },
                'Snack': { class: 'bg-warning text-dark', icon: 'fas fa-cookie' },
                'Dessert': { class: 'bg-pink text-white', icon: 'fas fa-ice-cream' },
                'Other': { class: 'bg-secondary text-white', icon: 'fas fa-ellipsis-h' }
            };
            return badges[category] || { class: 'bg-light text-dark', icon: 'fas fa-question' };
        }

        function getCategoryDisplayName(category) {
            const names = {
                'Food': 'Đồ ăn',
                'Drink': 'Đồ uống',
                'Combo': 'Combo',
                'Snack': 'Snack',
                'Dessert': 'Tráng miệng',
                'Other': 'Khác'
            };
            return names[category] || 'Khác';
        }

        function validateForm() {
            let isValid = true;
            const requiredFields = ['Name', 'Category'];

            requiredFields.forEach(field => {
                const element = $(`[name="${field}"]`);
                if (!element.val()) {
                    element.addClass('is-invalid');
                    isValid = false;
                } else {
                    element.removeClass('is-invalid');
                }
            });

            if (!isValid) {
                alert('Vui lòng điền đầy đủ thông tin bắt buộc!');
            }

            return isValid;
        }

        function previewChanges() {
            if (!validateForm()) {
                return;
            }

            // Get current values
            const currentValues = {
                name: $('#Name').val(),
                description: $('#Description').val(),
                category: $('#Category').val(),
                isActive: $('#IsActive').is(':checked')
            };

            // Compare and show changes
            const changes = [];

            if (currentValues.name !== originalValues.name) {
                changes.push(['Tên sản phẩm', originalValues.name, currentValues.name]);
            }
            if (currentValues.description !== originalValues.description) {
                changes.push(['Mô tả', originalValues.description || 'Trống', currentValues.description || 'Trống']);
            }
            if (currentValues.category !== originalValues.category) {
                changes.push(['Danh mục', originalValues.category, currentValues.category]);
            }
            if (currentValues.isActive !== originalValues.isActive) {
                changes.push(['Trạng thái', originalValues.isActive ? 'Hoạt động' : 'Ngưng hoạt động', currentValues.isActive ? 'Hoạt động' : 'Ngưng hoạt động']);
            }

            if (changes.length === 0) {
                alert('Không có thay đổi nào để xem trước.');
                return;
            }

            // Create changes preview
            let changesHtml = '<div class="table-responsive"><table class="table table-sm">';
            changesHtml += '<thead><tr><th>Thông tin</th><th class="text-muted">Trước</th><th class="text-primary">Sau</th></tr></thead><tbody>';

            changes.forEach(change => {
                changesHtml += `<tr><td class="fw-medium">${change[0]}</td><td class="text-muted">${change[1]}</td><td class="text-primary fw-bold">${change[2]}</td></tr>`;
            });

            changesHtml += '</tbody></table></div>';

            // Show preview in alert
            if (confirm('Có ' + changes.length + ' thay đổi. Nhấn OK để tiếp tục lưu.')) {
                $('#concessionForm').submit();
            }
        }

        // Category change handler with suggestions
        $('#categorySelect').change(function() {
            updatePreview();

            const category = $(this).val();
            const suggestions = {
                'Food': { description: 'Thức ăn ngon, phù hợp xem phim' },
                'Drink': { description: 'Nước giải khát mát lạnh, phù hợp xem phim' },
                'Combo': { description: 'Combo tiết kiệm gồm nhiều món ăn' },
                'Snack': { description: 'Snack nhẹ, tiện lợi' },
                'Dessert': { description: 'Tráng miệng ngọt ngào' }
            };

            if (suggestions[category] && !$('#Description').val()) {
                $('#Description').val(suggestions[category].description);
                updatePreview();
            }
        });
    </script>
}

<style>
    .card {
        transition: all 0.3s ease;
    }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.1) !important;
        }

    .form-control:focus,
    .form-select:focus {
        border-color: #ffc107;
        box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.25);
    }

    .btn {
        transition: all 0.3s ease;
    }

        .btn:hover {
            transform: translateY(-1px);
        }

    .bg-pink {
        background-color: #e83e8c !important;
    }

    #imagePreview {
        transition: all 0.3s ease;
        cursor: pointer;
    }

        #imagePreview:hover {
            transform: scale(1.02);
        }

    .border:hover {
        border-color: #ffc107 !important;
        transform: translateY(-1px);
        transition: all 0.3s ease;
    }

    /* Character count styling */
    #charCount {
        font-weight: 600;
        transition: color 0.3s ease;
    }

        #charCount.text-danger {
            animation: pulse 1s infinite;
        }



    {
        flex-direction: column;
        gap: 1rem;
    }

    .d-flex.justify-content-between .d-flex {
        justify-content: center;
    }

    #imagePreview {
        max-height: 200px;
    }

    }
</style>