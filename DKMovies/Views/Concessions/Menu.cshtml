@model IEnumerable<DKMovies.Models.Concession>
@{
    ViewData["Title"] = "Thực đơn Đồ Ăn";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var selectedCategory = ViewBag.SelectedCategory as string ?? "";
    var categories = ViewBag.Categories as List<string> ?? new List<string>();
}
<style>
    .concession-img {
        aspect-ratio: 1/1;
        object-fit: cover;
        border-radius: 12px 12px 0 0;
        transition: transform 0.3s ease;
    }

    .card:hover .concession-img {
        transform: scale(1.05);
    }

    .card {
        transition: all 0.3s ease;
        border: 1px solid rgba(0,0,0,0.08);
    }

        .card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15) !important;
        }

    .card-title {
        font-size: 1rem;
        font-weight: 600;
        color: #212529;
        margin-bottom: 0.25rem;
        line-height: 1.3;
    }

    .card-subtitle {
        font-size: 0.85rem;
        color: #6c757d;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        line-height: 1.4;
        height: 2.8em;
    }

    .filter-btn {
        transition: all 0.2s ease;
        border-radius: 20px;
        padding: 0.375rem 1rem;
        font-weight: 500;
    }

        .filter-btn:hover {
            transform: translateY(-1px);
        }

        .filter-btn.active, .btn-dark {
            background-color: #212529 !important;
            color: white !important;
            box-shadow: 0 2px 8px rgba(33, 37, 41, 0.3);
        }

    .btn-outline-dark:hover {
        background-color: #212529;
        color: white;
        transform: translateY(-1px);
    }

    .page-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 2rem 0;
        margin-bottom: 2rem;
        border-radius: 0 0 20px 20px;
    }

        .page-header h2 {
            margin: 0;
            text-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

    .btn-details {
        transition: all 0.2s ease;
        font-weight: 500;
        border-width: 2px;
    }

        .btn-details:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(0,123,255,0.3);
        }

    .category-filters {
        background: rgba(255,255,255,0.9);
        backdrop-filter: blur(10px);
        padding: 1rem;
        border-radius: 15px;
        margin-bottom: 2rem;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
    }

    .empty-state {
        text-align: center;
        padding: 3rem 1rem;
    }

        .empty-state .icon {
            font-size: 4rem;
            color: #dee2e6;
            margin-bottom: 1rem;
        }

    .loading-skeleton {
        background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
        background-size: 200% 100%;
        animation: loading 1.5s infinite;
    }

    {
        background-position: 200% 0;
    }

    100% {
        background-position: -200% 0;
    }

    }

    .card-body {
        position: relative;
    }

        .card-body::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 2px;
            background: linear-gradient(90deg, transparent, #007bff, transparent);
            opacity: 0;
            transition: opacity 0.3s ease;
        }

    .card:hover .card-body::before {
        opacity: 1;
    }

    {
        padding: 1.5rem 0;
        margin-bottom: 1.5rem;
    }

    .page-header h2 {
        font-size: 1.5rem;
    }

    .category-filters {
        margin-bottom: 1.5rem;
    }

    }</style>

<div class="page-header">
    <div class="container">
        <h2 class="fw-bold text-center">🍿 Thực đơn Đồ ăn - Đặt kèm vé xem phim</h2>
    </div>
</div>

<div class="container pb-4">
    @* Bộ lọc danh mục được cải thiện *@
    @if (categories.Any())
    {
        <div class="category-filters">
            <div class="d-flex justify-content-center flex-wrap gap-2">
                <a class="btn btn-sm filter-btn @(string.IsNullOrEmpty(selectedCategory) ? "btn-dark" : "btn-outline-dark")"
                   href="@Url.Action("Menu", "Concessions")">
                    <i class="bi bi-grid-3x3"></i> Tất cả
                </a>
                @foreach (var cat in categories)
                {
                    <a class="btn btn-sm filter-btn @(selectedCategory == cat ? "btn-dark" : "btn-outline-dark")"
                       href="@Url.Action("Menu", "Concessions", new { category = cat })">
                        @cat
                    </a>
                }
            </div>
        </div>
    }

    @if (!Model.Any())
    {
        <div class="empty-state">
            <div class="icon">🍿</div>
            <div class="alert alert-warning border-0 d-inline-block">
                <h5 class="alert-heading">Không có món ăn nào</h5>
                <p class="mb-0">Hiện tại không có món ăn nào trong danh mục này. Vui lòng thử danh mục khác!</p>
            </div>
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4">
            @foreach (var item in Model)
            {
                var imagePath = string.IsNullOrWhiteSpace(item.ImagePath)
                ? Url.Content("~/assets/images/concessions/default.jpg")
                : Url.Content($"~/assets/images/concessions/{item.ImagePath}");
                <div class="col">
                    <div class="card h-100 shadow-sm border-0 rounded-4 overflow-hidden">
                        <div class="position-relative overflow-hidden">
                            <img src="@imagePath"
                                 class="card-img-top concession-img"
                                 alt="@item.Name"
                                 loading="lazy" />
                        </div>
                        <div class="card-body d-flex flex-column p-3">
                            <div class="mb-3">
                                <h5 class="card-title text-truncate" title="@item.Name">@item.Name</h5>
                                @if (!string.IsNullOrWhiteSpace(item.Description))
                                {
                                    <p class="card-subtitle mb-0" title="@item.Description">@item.Description</p>
                                }
                            </div>
                            <div class="mt-auto">
                                <a href="@Url.Action("Details", "Concessions", new { id = item.ID })"
                                   class="btn btn-outline-primary w-100 btn-sm btn-details rounded-pill">
                                    <i class="bi bi-eye me-1"></i>Xem chi tiết
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<script>
    // Smooth loading effect
    document.addEventListener('DOMContentLoaded', function() {
        const cards = document.querySelectorAll('.card');
        cards.forEach((card, index) => {
            card.style.opacity = '0';
            card.style.transform = 'translateY(20px)';
            setTimeout(() => {
                card.style.transition = 'all 0.6s ease';
                card.style.opacity = '1';
                card.style.transform = 'translateY(0)';
            }, index * 100);
        });
    });

    // Lazy loading fallback for images
    const images = document.querySelectorAll('img[loading="lazy"]');
    images.forEach(img => {
        img.addEventListener('error', function() {
            this.src = '@Url.Content("~/assets/images/concessions/default.jpg")';
        });
    });
</script>