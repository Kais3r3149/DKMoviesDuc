@model DKMovies.Models.Employee
@{
    ViewData["Title"] = "Xóa nhân viên - " + Model.FullName;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="mb-4">
    <div class="d-flex align-items-center justify-content-between">
        <div>
            <h2 class="mb-1 fw-bold text-danger">
                <i class="fas fa-user-times text-danger me-2"></i>Xóa nhân viên
            </h2>
            <p class="text-muted mb-0">Xác nhận xóa nhân viên khỏi hệ thống</p>
        </div>
        <a asp-action="Index" class="btn btn-outline-secondary btn-sm">
            <i class="fas fa-arrow-left me-1"></i>Quay lại danh sách
        </a>
    </div>
</div>

<!-- Warning Alert -->
<div class="alert alert-danger border-0 shadow-sm mb-4" role="alert">
    <div class="d-flex align-items-center">
        <i class="fas fa-exclamation-triangle fa-2x me-3"></i>
        <div>
            <h5 class="alert-heading mb-1">Cảnh báo!</h5>
            <p class="mb-0">Bạn có chắc chắn muốn xóa nhân viên này? Hành động này không thể hoàn tác.</p>
        </div>
    </div>
</div>

<div class="row g-4">
    <!-- Employee Profile Card -->
    <div class="col-lg-4">
        <div class="card border-danger shadow-sm">
            <div class="card-header bg-danger text-white py-3">
                <h5 class="card-title mb-0 fw-semibold">
                    <i class="fas fa-user me-2"></i>Thông tin nhân viên
                </h5>
            </div>
            <div class="card-body text-center p-4">
                <div class="bg-danger text-white rounded-circle d-flex align-items-center justify-content-center mx-auto border border-3 border-danger shadow mb-3"
                     style="width: 120px; height: 120px;">
                    <span class="fw-bold" style="font-size: 2.5rem;">@Model.FullName.Substring(0, 1).ToUpper()</span>
                </div>

                <h4 class="fw-bold mb-1 text-danger">@Model.FullName</h4>
                <p class="text-muted mb-3">@Model.EmployeeCode</p>

                <div class="d-flex justify-content-center gap-2 mb-3">
                    <span class="badge @GetPositionBadgeClass(Model.Position)">
                        <i class="@GetPositionIcon(Model.Position) me-1"></i>@Model.Position
                    </span>
                    <span class="badge @(Model.IsActive ? "bg-success" : "bg-secondary")">
                        <i class="fas @(Model.IsActive ? "fa-check" : "fa-times") me-1"></i>
                        @(Model.IsActive ? "Đang làm việc" : "Nghỉ việc")
                    </span>
                </div>

                <!-- Work Statistics -->
                <div class="row g-2 text-center">
                    <div class="col-4">
                        <div class="bg-light rounded p-2">
                            <h6 class="text-primary mb-0">@((DateTime.Now - Model.HireDate).Days)</h6>
                            <small class="text-muted">Ngày làm việc</small>
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="bg-light rounded p-2">
                            <h6 class="text-warning mb-0">@String.Format("{0:N0}", Model.Salary / 1000)</h6>
                            <small class="text-muted">Lương (k₫)</small>
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="bg-light rounded p-2">
                            <h6 class="text-info mb-0">@(Model.Theater?.Name?.Length > 6 ? Model.Theater.Name.Substring(0, 6) + "..." : Model.Theater?.Name ?? "N/A")</h6>
                            <small class="text-muted">Rạp</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Employee Details -->
    <div class="col-lg-8">
        <div class="card border-0 shadow-sm">
            <div class="card-header bg-white border-bottom py-3">
                <h5 class="card-title mb-0 fw-semibold">
                    <i class="fas fa-info-circle text-info me-2"></i>Chi tiết nhân viên sẽ bị xóa
                </h5>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-6">
                        <label class="form-label fw-medium text-muted">Mã nhân viên:</label>
                        <div class="fw-bold">@Model.EmployeeCode</div>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-medium text-muted">Email:</label>
                        <div class="fw-bold">@Model.Email</div>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-medium text-muted">Số điện thoại:</label>
                        <div class="fw-bold">@(!string.IsNullOrEmpty(Model.Phone) ? Model.Phone : "Chưa cập nhật")</div>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-medium text-muted">Giới tính:</label>
                        <div class="fw-bold">@(!string.IsNullOrEmpty(Model.Gender) ? Model.Gender : "Chưa cập nhật")</div>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-medium text-muted">Ngày sinh:</label>
                        <div class="fw-bold">@(Model.BirthDate?.ToString("dd/MM/yyyy") ?? "Chưa cập nhật")</div>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-medium text-muted">Chức vụ:</label>
                        <div class="fw-bold">@Model.Position</div>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-medium text-muted">Rạp làm việc:</label>
                        <div class="fw-bold">@(Model.Theater?.Name ?? "Chưa phân công")</div>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-medium text-muted">Lương:</label>
                        <div class="fw-bold text-success">@String.Format("{0:N0} VND", Model.Salary)</div>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-medium text-muted">Ngày vào làm:</label>
                        <div class="fw-bold">@Model.HireDate.ToString("dd/MM/yyyy")</div>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-medium text-muted">Ngày tạo hồ sơ:</label>
                        <div class="fw-bold">@Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")</div>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-medium text-muted">Thời gian làm việc:</label>
                        <div class="fw-bold">@((DateTime.Now - Model.HireDate).Days) ngày</div>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-medium text-muted">Địa chỉ:</label>
                        <div class="fw-bold">@(!string.IsNullOrEmpty(Model.Address) ? Model.Address : "Chưa cập nhật")</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Impact Analysis -->
        <div class="card border-warning shadow-sm mt-4">
            <div class="card-header bg-warning text-dark py-3">
                <h5 class="card-title mb-0 fw-semibold">
                    <i class="fas fa-exclamation-triangle me-2"></i>Tác động khi xóa
                </h5>
            </div>
            <div class="card-body">
                <div class="alert alert-info" role="alert">
                    <h6 class="alert-heading">
                        <i class="fas fa-info-circle me-2"></i>Thông tin sẽ bị xóa vĩnh viễn
                    </h6>
                    <ul class="mb-0">
                        <li><strong>Hồ sơ nhân viên</strong> - Tất cả thông tin cá nhân và công việc</li>
                        <li><strong>Lịch sử làm việc</strong> - Thâm niên và kinh nghiệm</li>
                        <li><strong>Thông tin lương</strong> - Chi tiết về mức lương hiện tại</li>
                        <li><strong>Phân công công việc</strong> - Liên kết với rạp chiếu phim</li>
                    </ul>
                </div>

                <div class="alert alert-warning" role="alert">
                    <h6 class="alert-heading">
                        <i class="fas fa-exclamation-triangle me-2"></i>Lưu ý quan trọng
                    </h6>
                    <ul class="mb-0">
                        <li>Nhân viên này đã làm việc <strong>@((DateTime.Now - Model.HireDate).Days) ngày</strong></li>
                        <li>Tổng lương đã trả: <strong>@String.Format("{0:N0} VND", Model.Salary * Math.Ceiling((DateTime.Now - Model.HireDate).TotalDays / 30))</strong> (ước tính)</li>
                        <li>Việc xóa sẽ <strong>không ảnh hưởng</strong> đến dữ liệu lịch sử giao dịch</li>
                        <li>Có thể tạo lại nhân viên mới với thông tin tương tự nếu cần</li>
                    </ul>
                </div>

                @if (Model.IsActive)
                {
                    <div class="alert alert-danger" role="alert">
                        <h6 class="alert-heading">
                            <i class="fas fa-ban me-2"></i>Cảnh báo: Nhân viên đang hoạt động
                        </h6>
                        <p class="mb-0">
                            Nhân viên này đang ở trạng thái <strong>hoạt động</strong>.
                            Khuyên bạn nên <strong>tạm ngưng</strong> hoạt động trước khi xóa để tránh gián đoạn công việc.
                        </p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Action Buttons -->
<div class="row mt-4">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center">
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-2"></i>Quay lại danh sách
            </a>
            <div class="d-flex gap-2">
                <a asp-action="Details" asp-route-id="@Model.ID" class="btn btn-outline-info">
                    <i class="fas fa-eye me-2"></i>Xem chi tiết
                </a>
                <a asp-action="Edit" asp-route-id="@Model.ID" class="btn btn-outline-warning">
                    <i class="fas fa-edit me-2"></i>Chỉnh sửa thay vì xóa
                </a>
                @if (Model.IsActive)
                {
                    <button class="btn btn-outline-secondary" onclick="toggleStatus()" title="Tạm ngưng hoạt động trước khi xóa">
                        <i class="fas fa-pause me-2"></i>Tạm ngưng trước
                    </button>
                }
                <form asp-action="Delete" method="post" class="d-inline" onsubmit="return confirmDelete()">
                    <input asp-for="ID" type="hidden" />
                    <button type="submit" class="btn btn-danger" id="deleteBtn">
                        <i class="fas fa-trash me-2"></i>Xác nhận xóa
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetPositionBadgeClass(string position)
    {
        return position switch
        {
            "Quản lý" => "bg-danger text-white",
            "Thu ngân" => "bg-success text-white",
            "Kiểm vé" => "bg-info text-white",
            "Bảo vệ" => "bg-warning text-dark",
            "Kỹ thuật viên" => "bg-primary text-white",
            "Làm sạch" => "bg-secondary text-white",
            "Bán hàng" => "bg-purple text-white",
            _ => "bg-light text-dark"
        };
    }

    private string GetPositionIcon(string position)
    {
        return position switch
        {
            "Quản lý" => "fas fa-user-tie",
            "Thu ngân" => "fas fa-cash-register",
            "Kiểm vé" => "fas fa-ticket-alt",
            "Bảo vệ" => "fas fa-shield-alt",
            "Kỹ thuật viên" => "fas fa-tools",
            "Làm sạch" => "fas fa-broom",
            "Bán hàng" => "fas fa-shopping-cart",
            _ => "fas fa-user"
        };
    }
}

<style>
    .bg-purple {
        background-color: #6f42c1 !important;
    }

    .card {
        transition: all 0.3s ease;
    }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.1) !important;
        }

    .border-danger {
        border-color: #dc3545 !important;
    }

    .btn {
        transition: all 0.3s ease;
    }

        .btn:hover:not(:disabled) {
            transform: translateY(-1px);
        }

    .alert {
        border: none;
        border-radius: 10px;
    }

    @media (max-width: 768px) {
        .d-flex.justify-content-between

    {
        flex-direction: column;
        gap: 1rem;
    }

    .d-flex.justify-content-between .d-flex {
        justify-content: center;
    }

    }

    /* Danger emphasis */
    .text-danger {
        font-weight: 600;
    }

    .bg-danger {
        background-color: #dc3545 !important;
    }

    /* Confirmation modal styles */
    .swal2-popup {
        border-radius: 15px;
    }

    .swal2-title {
        color: #dc3545;
    }
</style>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        function confirmDelete() {
            event.preventDefault();

            const employeeName = '@Model.FullName';
            const workDays = @((DateTime.Now - Model.HireDate).Days);
            const isActive = @Model.IsActive.ToString().ToLower();

            let warningText = `Nhân viên này đã làm việc ${workDays} ngày.`;
            if (isActive) {
                warningText += ' Nhân viên đang ở trạng thái hoạt động.';
            }

            Swal.fire({
                title: 'Xác nhận xóa nhân viên?',
                html: `
                    <div class="text-start">
                        <p><strong>Nhân viên:</strong> ${employeeName}</p>
                        <p><strong>Mã:</strong> @Model.EmployeeCode</p>
                        <p class="text-warning"><i class="fas fa-exclamation-triangle me-2"></i>${warningText}</p>
                        <div class="alert alert-danger mt-3">
                            <small><strong>Để xác nhận:</strong> Nhập tên nhân viên bên dưới</small>
                        </div>
                    </div>
                `,
                input: 'text',
                inputPlaceholder: 'Nhập: ' + employeeName,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#dc3545',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Xóa vĩnh viễn',
                cancelButtonText: 'Hủy bỏ',
                reverseButtons: true,
                inputValidator: (value) => {
                    if (!value) {
                        return 'Vui lòng nhập tên nhân viên để xác nhận'
                    }
                    if (value !== employeeName) {
                        return 'Tên nhân viên không chính xác'
                    }
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    // Show loading state
                    const deleteBtn = document.getElementById('deleteBtn');
                    deleteBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Đang xóa...';
                    deleteBtn.disabled = true;

                    // Submit form
                    event.target.submit();
                }
            });

            return false;
        }

        async function toggleStatus() {
            try {
                const response = await fetch('@Url.Action("ToggleEmployeeStatus", "AdminEmployee")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('[name="__RequestVerificationToken"]')?.value
                    },
                    body: JSON.stringify({ employeeId: @Model.ID })
                });

                const result = await response.json();

                if (result.success) {
                    Swal.fire({
                        title: 'Thành công!',
                        text: result.message,
                        icon: 'success',
                        timer: 2000,
                        showConfirmButton: false
                    }).then(() => {
                        location.reload();
                    });
                } else {
                    throw new Error(result.message || 'Có lỗi xảy ra');
                }
            } catch (error) {
                Swal.fire({
                    title: 'Lỗi!',
                    text: 'Có lỗi xảy ra khi cập nhật trạng thái',
                    icon: 'error'
                });
            }
        }

        // Add warning animations
        document.addEventListener('DOMContentLoaded', function() {
            // Animate danger elements
            const dangerElements = document.querySelectorAll('.text-danger, .border-danger');
            dangerElements.forEach((el, index) => {
                setTimeout(() => {
                    el.style.animation = 'pulse 2s infinite';
                }, index * 200);
            });

            // Show tooltip for active employee warning
            if (@Model.IsActive.ToString().ToLower()) {
                setTimeout(() => {
                    Swal.fire({
                        title: 'Lưu ý',
                        text: 'Nhân viên này đang hoạt động. Khuyên bạn tạm ngưng trước khi xóa.',
                        icon: 'info',
                        timer: 3000,
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false
                    });
                }, 1000);
            }
        });

        // Add pulse animation
        const style = document.createElement('style');
        style.textContent = `
        @keyframes pulse {
                0% { opacity: 1; }
                50% { opacity: 0.7; }
                100% { opacity: 1; }
            }
        `;
        document.head.appendChild(style);
    </script>
}

@{
    Html.AntiForgeryToken();
}