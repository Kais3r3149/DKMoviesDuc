<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chọn ghế ngồi - Cinema Booking</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.11.0/font/bootstrap-icons.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #667eea;
            --secondary-color: #764ba2;
            --success-color: #28a745;
            --danger-color: #dc3545;
            --warning-color: #ffc107;
            --info-color: #007bff;
            --light-color: #f8f9fa;
            --dark-color: #343a40;
        }

        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            min-height: 100vh;
        }

        .page-header {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
            color: white;
            padding: 2rem 0;
            margin-bottom: 2rem;
            border-radius: 0 0 20px 20px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

        .movie-info-card {
            background: rgba(255,255,255,0.1);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 1.5rem;
            border: 1px solid rgba(255,255,255,0.2);
        }

        .cinema-screen {
            background: linear-gradient(135deg, #2c3e50, #34495e);
            color: white;
            text-align: center;
            padding: 1rem;
            margin: 2rem auto;
            border-radius: 50px 50px 10px 10px;
            max-width: 500px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
            position: relative;
            font-weight: 600;
            font-size: 1.1rem;
        }

            .cinema-screen::before {
                content: '';
                position: absolute;
                top: -5px;
                left: 50%;
                transform: translateX(-50%);
                width: 80%;
                height: 5px;
                background: linear-gradient(90deg, transparent, #fff, transparent);
                border-radius: 10px;
            }

        .seating-container {
            background: white;
            border-radius: 20px;
            padding: 2rem;
            margin: 2rem 0;
            box-shadow: 0 4px 15px rgba(0,0,0,0.05);
        }

        .seat-map {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 8px;
            margin-bottom: 2rem;
        }

        .seat-row {
            display: flex;
            align-items: center;
            gap: 6px;
        }

        .row-label {
            width: 30px;
            text-align: center;
            font-weight: bold;
            color: var(--dark-color);
            font-size: 0.9rem;
        }

        .seat {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            border: 2px solid transparent;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.8rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s ease;
            position: relative;
            user-select: none;
        }

            .seat.available {
                background: #e8f5e8;
                border-color: var(--success-color);
                color: var(--success-color);
            }

                .seat.available:hover {
                    background: var(--success-color);
                    color: white;
                    transform: scale(1.05);
                }

            .seat.selected {
                background: var(--info-color);
                border-color: #0056b3;
                color: white;
                transform: scale(1.05);
                box-shadow: 0 4px 15px rgba(0, 123, 255, 0.4);
            }

            .seat.taken {
                background: #6c757d;
                border-color: #495057;
                color: white;
                cursor: not-allowed;
                opacity: 0.7;
            }

            .seat.disabled {
                background: #f8f9fa;
                border-color: #dee2e6;
                color: #6c757d;
                cursor: not-allowed;
                opacity: 0.5;
            }

        .aisle {
            width: 20px;
        }

        .seat-legend {
            display: flex;
            justify-content: center;
            gap: 2rem;
            margin: 2rem 0;
            flex-wrap: wrap;
        }

        .legend-item {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.9rem;
            color: var(--dark-color);
        }

        .legend-seat {
            width: 30px;
            height: 30px;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.7rem;
            font-weight: 600;
        }

            .legend-seat.available {
                background: #e8f5e8;
                border: 2px solid var(--success-color);
                color: var(--success-color);
            }

            .legend-seat.selected {
                background: var(--info-color);
                border: 2px solid #0056b3;
                color: white;
            }

            .legend-seat.taken {
                background: #6c757d;
                border: 2px solid #495057;
                color: white;
            }

            .legend-seat.disabled {
                background: #f8f9fa;
                border: 2px solid #dee2e6;
                color: #6c757d;
            }

        .booking-summary {
            background: white;
            border-radius: 15px;
            padding: 2rem;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            margin-top: 2rem;
        }

        .selected-seats-display {
            background: var(--light-color);
            border-radius: 10px;
            padding: 1rem;
            margin: 1rem 0;
            min-height: 50px;
            display: flex;
            align-items: center;
            flex-wrap: wrap;
            gap: 0.5rem;
        }

        .selected-seat-tag {
            background: linear-gradient(45deg, var(--info-color), #0056b3);
            color: white;
            padding: 0.3rem 0.8rem;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: 600;
            animation: fadeIn 0.3s ease;
        }


        {
            opacity: 0;
            transform: scale(0.8);
        }

        to {
            opacity: 1;
            transform: scale(1);
        }

        }


        {
            transform: rotate(0deg);
        }

        to {
            transform: rotate(360deg);
        }

        }

        .spin {
            animation: spin 1s linear infinite;
        }

        .concessions-section {
            background: white;
            border-radius: 15px;
            padding: 2rem;
            margin-top: 2rem;
            box-shadow: 0 4px 15px rgba(0,0,0,0.05);
        }

        .concession-item {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 1rem;
            border: 1px solid #dee2e6;
            border-radius: 10px;
            margin-bottom: 1rem;
            transition: all 0.2s ease;
        }

            .concession-item:hover {
                box-shadow: 0 2px 8px rgba(0,0,0,0.1);
                border-color: var(--info-color);
            }

        .concession-info h6 {
            margin: 0;
            color: var(--dark-color);
        }

        .concession-info .price {
            color: var(--danger-color);
            font-weight: 600;
        }

        .quantity-controls {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .quantity-btn {
            width: 30px;
            height: 30px;
            border: 1px solid #dee2e6;
            background: white;
            border-radius: 5px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.2s ease;
        }

            .quantity-btn:hover:not(:disabled) {
                background: var(--info-color);
                color: white;
                border-color: var(--info-color);
            }

            .quantity-btn:disabled {
                opacity: 0.5;
                cursor: not-allowed;
            }

        .quantity-input {
            width: 50px;
            text-align: center;
            border: 1px solid #dee2e6;
            border-radius: 5px;
            padding: 0.25rem;
        }

        .btn-proceed {
            background: linear-gradient(45deg, var(--success-color), #20c997);
            border: none;
            border-radius: 25px;
            padding: 1rem 2rem;
            font-weight: 600;
            color: white;
            width: 100%;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(40, 167, 69, 0.3);
        }

            .btn-proceed:hover:not(:disabled) {
                background: linear-gradient(45deg, #20c997, #17a2b8);
                transform: translateY(-2px);
                box-shadow: 0 6px 20px rgba(40, 167, 69, 0.4);
                color: white;
            }

            .btn-proceed:disabled {
                background: #6c757d;
                cursor: not-allowed;
                transform: none;
                box-shadow: none;
            }

        .back-btn {
            background: rgba(255,255,255,0.1);
            color: white;
            border: 1px solid rgba(255,255,255,0.2);
            border-radius: 20px;
            padding: 0.5rem 1.5rem;
            text-decoration: none;
            transition: all 0.3s ease;
        }

            .back-btn:hover {
                background: rgba(255,255,255,0.2);
                color: white;
                transform: translateY(-1px);
            }

        .alert {
            border-radius: 10px;
            margin-bottom: 1rem;
        }

        .layout-container {
            display: grid;
            grid-template-columns: 1fr;
            gap: 2rem;
            max-width: 1200px;
            margin: 0 auto;
        }

       

        {
            grid-template-columns: 2fr 1fr;
        }

        }


        {
            width: 35px;
            height: 35px;
            font-size: 0.7rem;
        }

        .row-label {
            width: 25px;
            font-size: 0.8rem;
        }

        .seat-legend {
            gap: 1rem;
        }

        .seating-container {
            padding: 1rem;
        }

        }</style>
</head>
<body>
    <!-- Page Header -->
    <div class="page-header">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <div class="movie-info-card">
                        <h2 class="mb-2">
                            <i class="bi bi-ticket-perforated me-2"></i>
                            Chọn ghế ngồi
                        </h2>
                        <div class="row">
                            <div class="col-md-8">
                                <h4 class="mb-1">Avengers: Endgame</h4>
                                <p class="mb-1">
                                    <i class="bi bi-building me-1"></i>
                                    CGV Vincom
                                </p>
                                <p class="mb-1">
                                    <i class="bi bi-camera-reels me-1"></i>
                                    Phòng 3D-01
                                </p>
                                <p class="mb-0">
                                    <i class="bi bi-clock me-1"></i>
                                    Thứ Ba, 04/06/2025 - 19:30
                                </p>
                            </div>
                            <div class="col-md-4 text-md-end">
                                <div class="price-info">
                                    <small>Giá vé</small>
                                    <div class="h5 mb-0">120,000 ₫</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 text-md-end mt-3 mt-md-0">
                    <a href="#" class="back-btn">
                        <i class="bi bi-arrow-left me-2"></i>Chọn suất khác
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="container pb-5">
        <div class="layout-container">
            <!-- Main Content -->
            <div class="main-content">
                <!-- Cinema Screen -->
                <div class="cinema-screen">
                    <i class="bi bi-tv me-2"></i>
                    <strong>MÀN HÌNH</strong>
                </div>

                <!-- Seat Selection -->
                <div class="seating-container">
                    <h5 class="text-center mb-3">Khu vực VIP - Ghế A1 đến J18</h5>

                    <div class="seat-map" id="seatMap">
                        <!-- Seats will be generated by JavaScript -->
                    </div>
                </div>

                <!-- Seat Legend -->
                <div class="seat-legend">
                    <div class="legend-item">
                        <div class="legend-seat available">A1</div>
                        <span>Ghế trống</span>
                    </div>
                    <div class="legend-item">
                        <div class="legend-seat selected">A2</div>
                        <span>Ghế đã chọn</span>
                    </div>
                    <div class="legend-item">
                        <div class="legend-seat taken">A3</div>
                        <span>Ghế đã đặt</span>
                    </div>
                    <div class="legend-item">
                        <div class="legend-seat disabled">A4</div>
                        <span>Không thể chọn</span>
                    </div>
                </div>

                <!-- Concessions Section -->
                <div class="concessions-section">
                    <h5 class="mb-3">
                        <i class="bi bi-cup-straw me-2"></i>
                        Đồ ăn & Thức uống
                    </h5>

                    <div class="concession-item">
                        <div class="concession-info">
                            <h6>Bắp rang bơ lớn</h6>
                            <div class="price">65,000 ₫</div>
                        </div>
                        <div class="quantity-controls">
                            <button class="quantity-btn" onclick="changeQuantity('popcorn', -1)">-</button>
                            <input type="number" class="quantity-input" id="popcorn-qty" value="0" min="0" max="10" readonly>
                            <button class="quantity-btn" onclick="changeQuantity('popcorn', 1)">+</button>
                        </div>
                    </div>

                    <div class="concession-item">
                        <div class="concession-info">
                            <h6>Coca Cola lớn</h6>
                            <div class="price">45,000 ₫</div>
                        </div>
                        <div class="quantity-controls">
                            <button class="quantity-btn" onclick="changeQuantity('coke', -1)">-</button>
                            <input type="number" class="quantity-input" id="coke-qty" value="0" min="0" max="10" readonly>
                            <button class="quantity-btn" onclick="changeQuantity('coke', 1)">+</button>
                        </div>
                    </div>

                    <div class="concession-item">
                        <div class="concession-info">
                            <h6>Combo Family</h6>
                            <div class="price">150,000 ₫</div>
                        </div>
                        <div class="quantity-controls">
                            <button class="quantity-btn" onclick="changeQuantity('combo', -1)">-</button>
                            <input type="number" class="quantity-input" id="combo-qty" value="0" min="0" max="5" readonly>
                            <button class="quantity-btn" onclick="changeQuantity('combo', 1)">+</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Booking Summary -->
            <div class="sidebar">
                <div class="booking-summary">
                    <h5 class="mb-3">
                        <i class="bi bi-list-check me-2"></i>
                        Thông tin đặt vé
                        <span id="seatCountBadge" class="badge bg-secondary ms-2">0/5</span>
                    </h5>

                    <div class="alert alert-warning d-none" id="maxSeatsWarning">
                        <i class="bi bi-exclamation-triangle me-2"></i>
                        <strong>Đã chọn tối đa 5 ghế!</strong><br>
                        <small>Vui lòng bỏ chọn ghế khác để chọn ghế mới.</small>
                    </div>

                    <div class="mb-3">
                        <strong>Ghế đã chọn:</strong>
                        <div class="selected-seats-display" id="selectedSeatsDisplay">
                            <span class="text-muted">Chưa chọn ghế nào</span>
                        </div>
                    </div>

                    <div class="mb-3">
                        <div class="d-flex justify-content-between">
                            <span>Số ghế:</span>
                            <strong id="seatCount">0</strong>
                        </div>
                        <div class="d-flex justify-content-between">
                            <span>Giá mỗi ghế:</span>
                            <strong>120,000 ₫</strong>
                        </div>
                        <div class="d-flex justify-content-between">
                            <span>Đồ ăn & thức uống:</span>
                            <strong id="concessionTotal">0 ₫</strong>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between">
                            <span class="h6">Tổng cộng:</span>
                            <strong class="h6 text-danger" id="totalPrice">0 ₫</strong>
                        </div>
                    </div>

                    <button class="btn-proceed" id="proceedBtn" disabled onclick="proceedToPayment()">
                        <i class="bi bi-credit-card me-2"></i>
                        Tiến hành thanh toán
                    </button>

                    <div class="mt-3 text-center">
                        <small class="text-muted">
                            <i class="bi bi-info-circle me-1"></i>
                            Vé sẽ được giữ trong 15 phút
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
                // Constants
                const SEAT_PRICE = 120000;
                const MAX_SEATS = 5;
                const CONCESSION_PRICES = {
                    popcorn: 65000,
                    coke: 45000,
                    combo: 150000
                };

                // State
                let selectedSeats = [];
                let concessionQuantities = {
                    popcorn: 0,
                    coke: 0,
                    combo: 0
                };

                // Predefined taken seats for demo
                const takenSeats = ['A3', 'A8', 'B5', 'C12', 'D7', 'E15', 'F3', 'G10', 'H6', 'I14'];

                // Initialize
                document.addEventListener('DOMContentLoaded', function() {
                    generateSeatMap();
                    updateDisplay();
                    console.log('✅ Cinema booking system initialized');
                });

                // Generate seat map
                function generateSeatMap() {
                    const seatMap = document.getElementById('seatMap');
                    const rows = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'];

                    rows.forEach(row => {
                        const seatRow = document.createElement('div');
                        seatRow.className = 'seat-row';

                        // Row label
                        const rowLabel = document.createElement('div');
                        rowLabel.className = 'row-label';
                        rowLabel.textContent = row;
                        seatRow.appendChild(rowLabel);

                        // Generate seats
                        for (let i = 1; i <= 18; i++) {
                            const seatId = `${row}${i}`;

                            // Add aisle after seat 6 and 12
                            if (i === 7 || i === 13) {
                                const aisle = document.createElement('div');
                                aisle.className = 'aisle';
                                seatRow.appendChild(aisle);
                            }

                            const seat = document.createElement('div');
                            seat.className = 'seat';
                            seat.id = seatId;
                            seat.textContent = i;
                            seat.title = `Ghế ${seatId}`;

                            // Set seat status
                            if (takenSeats.includes(seatId)) {
                                seat.classList.add('taken');
                                seat.title = `Ghế ${seatId} - Đã được đặt`;
                            } else {
                                seat.classList.add('available');
                                seat.title = `Ghế ${seatId} - 120,000₫`;
                                seat.addEventListener('click', () => toggleSeat(seatId));
                            }

                            seatRow.appendChild(seat);
                        }

                        seatMap.appendChild(seatRow);
                    });
                }

                // Toggle seat selection
                function toggleSeat(seatId) {
                    const seat = document.getElementById(seatId);

                    if (seat.classList.contains('taken') || seat.classList.contains('disabled')) {
                        showMessage('Không thể chọn ghế này!', 'warning');
                        return;
                    }

                    if (seat.classList.contains('selected')) {
                        // Deselect seat
                        seat.classList.remove('selected');
                        seat.classList.add('available');
                        selectedSeats = selectedSeats.filter(id => id !== seatId);
                        console.log(`❌ Deselected seat: ${seatId}`);
                    } else {
                        // Check max seats limit
                        if (selectedSeats.length >= MAX_SEATS) {
                            showMessage(`Chỉ được chọn tối đa ${MAX_SEATS} ghế!`, 'warning');
                            return;
                        }

                        // Select seat
                        seat.classList.remove('available');
                        seat.classList.add('selected');
                        selectedSeats.push(seatId);
                        console.log(`✅ Selected seat: ${seatId}`);
                    }

                    updateDisplay();
                    updateSeatStates();
                }

                // Update seat states based on selection limit
                function updateSeatStates() {
                    const availableSeats = document.querySelectorAll('.seat.available');

                    if (selectedSeats.length >= MAX_SEATS) {
                        availableSeats.forEach(seat => {
                            seat.classList.add('disabled');
                            seat.classList.remove('available');
                        });
                    } else {
                        availableSeats.forEach(seat => {
                            if (seat.classList.contains('disabled')) {
                                seat.classList.remove('disabled');
                                seat.classList.add('available');
                            }
                        });
                    }
                }

                // Change concession quantity
                function changeQuantity(item, change) {
                    const currentQty = concessionQuantities[item];
                    const newQty = Math.max(0, Math.min(10, currentQty + change));

                    if (item === 'combo') {
                        // Combo has lower max limit
                        concessionQuantities[item] = Math.min(5, newQty);
                    } else {
                        concessionQuantities[item] = newQty;
                    }

                    document.getElementById(`${item}-qty`).value = concessionQuantities[item];
                    updateDisplay();
                }

                // Update display
                function updateDisplay() {
                    updateSelectedSeatsDisplay();
                    updatePricing();
                    updateCounters();
                    updateProceedButton();
                }

                function updateSelectedSeatsDisplay() {
                    const display = document.getElementById('selectedSeatsDisplay');

                    if (selectedSeats.length === 0) {
                        display.innerHTML = '<span class="text-muted">Chưa chọn ghế nào</span>';
                    } else {
                        display.innerHTML = selectedSeats
                            .sort()
                            .map(seat => `<span class="selected-seat-tag">${seat}</span>`)
                            .join('');
                    }
                }

                function updatePricing() {
                    const ticketTotal = selectedSeats.length * SEAT_PRICE;
                    const concessionTotal = Object.entries(concessionQuantities)
                        .reduce((total, [item, qty]) => total + (qty * CONCESSION_PRICES[item]), 0);
                    const grandTotal = ticketTotal + concessionTotal;

                    document.getElementById('concessionTotal').textContent = concessionTotal.toLocaleString('vi-VN') + ' ₫';
                    document.getElementById('totalPrice').textContent = grandTotal.toLocaleString('vi-VN') + ' ₫';
                }

                function updateCounters() {
                    const seatCount = selectedSeats.length;
                    const badge = document.getElementById('seatCountBadge');
                    const warning = document.getElementById('maxSeatsWarning');

                    document.getElementById('seatCount').textContent = seatCount;
                    badge.textContent = `${seatCount}/${MAX_SEATS}`;

                    // Update badge color
                    if (seatCount === 0) {
                        badge.className = 'badge bg-secondary ms-2';
                    } else if (seatCount >= MAX_SEATS) {
                        badge.className = 'badge bg-danger ms-2';
                        warning.classList.remove('d-none');
                    } else {
                        badge.className = 'badge bg-primary ms-2';
                        warning.classList.add('d-none');
                    }
                }

                function updateProceedButton() {
                    const proceedBtn = document.getElementById('proceedBtn');
                    proceedBtn.disabled = selectedSeats.length === 0;
                }

                // Show message
                function showMessage(message, type = 'info') {
                    // Remove existing message
                    const existing = document.getElementById('tempMessage');
                    if (existing) existing.remove();

                    const alertClass = type === 'error' ? 'alert-danger' :
                                      type === 'warning' ? 'alert-warning' :
                                      type === 'success' ? 'alert-success' : 'alert-info';

                    const messageEl = document.createElement('div');
                    messageEl.id = 'tempMessage';
                    messageEl.className = `alert ${alertClass} position-fixed`;
                    messageEl.style.cssText = `
                        top: 20px;
                        right: 20px;
                        z-index: 9999;
                        min-width: 300px;
                        box-shadow: 0 4px 15px rgba(0,0,0,0.2);
                        border-radius: 10px;
                    `;

                    const icon = type === 'error' ? 'exclamation-circle' :
                                type === 'warning' ? 'exclamation-triangle' :
                                type === 'success' ? 'check-circle' : 'info-circle';

                    messageEl.innerHTML = `
                        <i class="bi bi-${icon} me-2"></i>
                        ${message}
                    `;

                    document.body.appendChild(messageEl);

                    setTimeout(() => {
                        if (messageEl.parentNode) {
                            messageEl.remove();
                        }
                    }, 3000);
                }

                // Proceed to payment
                function proceedToPayment() {
                    if (selectedSeats.length === 0) {
                        showMessage('Vui lòng chọn ít nhất một ghế!', 'warning');
                        return;
                    }

                    const proceedBtn = document.getElementById('proceedBtn');
                    proceedBtn.innerHTML = '<i class="bi bi-arrow-repeat spin me-2"></i>Đang xử lý...';
                    proceedBtn.disabled = true;

                    // Simulate processing
                    setTimeout(() => {
                        const totalItems = Object.values(concessionQuantities).reduce((a, b) => a + b, 0);
                        const concessionTotal = Object.entries(concessionQuantities)
                            .reduce((total, [item, qty]) => total + (qty * CONCESSION_PRICES[item]), 0);
                        const grandTotal = selectedSeats.length * SEAT_PRICE + concessionTotal;

                        const summary = `
        Ghế đã chọn: ${selectedSeats.join(', ')}
        Số lượng đồ ăn/thức uống: ${totalItems}
        Tổng tiền: ${grandTotal.toLocaleString('vi-VN')} ₫

        Đặt vé thành công! Chuyển đến trang thanh toán...`;

                        alert(summary);

                        // Reset form for demo
                        selectedSeats = [];
                        concessionQuantities = { popcorn: 0, coke: 0, combo: 0 };

                        // Reset UI
                        document.querySelectorAll('.seat.selected').forEach(seat => {
                            seat.classList.remove('selected');
                            seat.classList.add('available');
                        });

                        document.querySelectorAll('.quantity-input').forEach(input => {
                            input.value = 0;
                        });

                        updateDisplay();
                        updateSeatStates();

                        proceedBtn.innerHTML = '<i class="bi bi-credit-card me-2"></i>Tiến hành thanh toán';
                        proceedBtn.disabled = true;

                        showMessage('Đặt vé thành công! Form đã được reset để demo.', 'success');
                    }, 1500);
                }

                // Debug functions for testing
                window.seatDebug = {
                    selectSeats: (seats) => {
                        seats.forEach(seatId => {
                            const seat = document.getElementById(seatId);
                            if (seat && seat.classList.contains('available')) {
                                toggleSeat(seatId);
                            }
                        });
                    },

                    clearAll: () => {
                        selectedSeats.slice().forEach(seatId => toggleSeat(seatId));
                    },

                    getSelected: () => selectedSeats,

                    addConcessions: () => {
                        changeQuantity('popcorn', 2);
                        changeQuantity('coke', 1);
                        changeQuantity('combo', 1);
                    }
                };
    </script>
</body>
</html>